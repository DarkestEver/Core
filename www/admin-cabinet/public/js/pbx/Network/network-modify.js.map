{"version":3,"sources":["../../src/Network/network-modify.js"],"names":["networks","$getMyIpButton","$","$formObj","vlansArray","validateRules","gateway","optional","rules","type","prompt","globalTranslate","nw_ValidateIppaddrNotRight","primarydns","secondarydns","extipaddr","nw_ValidateExtIppaddrNotRight","nw_ValidateExtIppaddrOrHostIsEmpty","exthostname","depends","initialize","toggleDisabledFieldClass","tab","checkbox","onChange","dropdown","on","e","preventDefault","addClass","PbxApi","GetExternalIp","cbAfterGetExternalIp","api","url","globalRootUrl","method","beforeSend","settings","onSuccess","response","removeClass","remove","each","message","index","value","after","success","window","location","reload","onFailure","initialValues","interface_new","name_new","dhcp_new","ipaddr_new","subnet_new","form","first","attr","initializeForm","ip","obj","eth","val","addNewFormRules","newRowId","nameClass","identifier","nw_ValidateNameIsNotBeEmpty","vlanClass","nw_ValidateVlanRange","nw_ValidateVlanCross","ipaddrClass","nw_ValidateIppaddrIsEmpty","dhcpClass","nw_ValidateDHCPOnVlansDontSupport","cbBeforeSendForm","result","data","cbAfterSendForm","Form","fn","ipaddr","f","match","i","a","checkVlan","vlanValue","param","allValues","undefined","newEthName","vlanid_new","indexOf","ethName","split","inArray","push","dhcpOnVlanNetworks","dhcpValue","extenalIpHost","usenat","document","ready"],"mappings":"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","sourcesContent":["/*\n * Copyright (C) MIKO LLC - All Rights Reserved\n * Unauthorized copying of this file, via any medium is strictly prohibited\n * Proprietary and confidential\n * Written by Nikolay Beketov, 5 2018\n *\n */\n\n/* global globalRootUrl,globalTranslate, Form, PbxApi */\n\nconst networks = {\n\t$getMyIpButton: $('#getmyip'),\n\t$formObj: $('#network-form'),\n\tvlansArray: {},\n\tvalidateRules: {\n\t\tgateway: {\n\t\t\toptional: true,\n\t\t\trules: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'ipaddr',\n\t\t\t\t\tprompt: globalTranslate.nw_ValidateIppaddrNotRight,\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t\tprimarydns: {\n\t\t\toptional: true,\n\t\t\trules: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'ipaddr',\n\t\t\t\t\tprompt: globalTranslate.nw_ValidateIppaddrNotRight,\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t\tsecondarydns: {\n\t\t\toptional: true,\n\t\t\trules: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'ipaddr',\n\t\t\t\t\tprompt: globalTranslate.nw_ValidateIppaddrNotRight,\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t\textipaddr: {\n\t\t\toptional: true,\n\t\t\trules: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'ipaddr',\n\t\t\t\t\tprompt: globalTranslate.nw_ValidateExtIppaddrNotRight,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'extenalIpHost',\n\t\t\t\t\tprompt: globalTranslate.nw_ValidateExtIppaddrOrHostIsEmpty,\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t\texthostname: {\n\t\t\tdepends: 'usenat',\n\t\t\trules: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'extenalIpHost',\n\t\t\t\t\tprompt: globalTranslate.nw_ValidateExtIppaddrOrHostIsEmpty,\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t},\n\tinitialize() {\n\t\tnetworks.toggleDisabledFieldClass();\n\t\t$('#eth-interfaces-menu .item').tab();\n\n\t\t$('#usenat-checkbox').checkbox({\n\t\t\tonChange() {\n\t\t\t\tnetworks.toggleDisabledFieldClass();\n\t\t\t},\n\t\t});\n\t\t$('.dropdown')\n\t\t\t.dropdown();\n\t\t$('.dhcp-checkbox')\n\t\t\t.checkbox({\n\t\t\t\tonChange() {\n\t\t\t\t\tnetworks.toggleDisabledFieldClass();\n\t\t\t\t},\n\t\t\t});\n\t\tnetworks.$getMyIpButton.on('click', (e) => {\n\t\t\te.preventDefault();\n\t\t\tnetworks.$getMyIpButton.addClass('loading disabled');\n\t\t\tPbxApi.GetExternalIp(networks.cbAfterGetExternalIp);\n\t\t});\n\n\t\t// Удаление дополнительного сетевого интерфейса\n\t\t$('.delete-interface').api({\n\t\t\turl: `${globalRootUrl}network/delete/{value}`,\n\t\t\tmethod: 'POST',\n\t\t\tbeforeSend(settings) {\n\t\t\t\t$(this).addClass('loading disabled');\n\t\t\t\treturn settings;\n\t\t\t},\n\n\t\t\tonSuccess(response) {\n\t\t\t\t$(this).removeClass('loading disabled');\n\t\t\t\t$('.ui.message.ajax').remove();\n\t\t\t\t$.each(response.message, (index, value) => {\n\t\t\t\t\tnetworks.$formObj.after(`<div class=\"ui ${index} message ajax\">${value}</div>`);\n\t\t\t\t});\n\t\t\t\tif (response.success) window.location.reload();\n\t\t\t},\n\n\t\t\tonFailure(response) {\n\t\t\t\t$(this).removeClass('loading disabled');\n\t\t\t\t$('form').after(response);\n\t\t\t},\n\t\t});\n\n\t\t// Очистка настроек дополнительного сетевого\n\t\t$('.delete-interface-new').on('click', () => {\n\t\t\tconst initialValues = {\n\t\t\t\tinterface_new: '',\n\t\t\t\tname_new: '',\n\t\t\t\tdhcp_new: 'on',\n\t\t\t\tipaddr_new: '',\n\t\t\t\tsubnet_new: '0',\n\t\t\t};\n\t\t\tnetworks.$formObj.form('set values', initialValues);\n\t\t\t$('#interface_new').dropdown('restore defaults');\n\t\t\t$('#dhcp-new-checkbox').checkbox('check');\n\t\t\t$('#eth-interfaces-menu .item').tab('change tab', $('#eth-interfaces-menu a.item').first().attr('data-tab'));\n\t\t});\n\n\t\tnetworks.initializeForm();\n\t},\n\t/**\n\t * Обработчик API функции по возврату структуры с IP адресом маршрутизатора\n\t */\n\tcbAfterGetExternalIp(response) {\n\t\tif (response === false) {\n\t\t\tnetworks.$getMyIpButton.removeClass('loading disabled');\n\t\t} else {\n\t\t\tnetworks.$formObj.form('set value', 'extipaddr', response.ip);\n\t\t\tnetworks.$getMyIpButton.removeClass('loading disabled');\n\t\t}\n\t},\n\ttoggleDisabledFieldClass() {\n\t\t$('#eth-interfaces-menu a').each((index, obj) => {\n\t\t\tconst eth = $(obj).attr('data-tab');\n\t\t\tif ($(`#dhcp-${eth}-checkbox`).checkbox('is unchecked')) {\n\t\t\t\t$(`#ip-address-group-${eth}`).removeClass('disabled');\n\t\t\t\t$(`#not-dhcp-${eth}`).val('1');\n\t\t\t} else {\n\t\t\t\t$(`#ip-address-group-${eth}`).addClass('disabled');\n\t\t\t\t$(`#not-dhcp-${eth}`).val('');\n\t\t\t}\n\t\t\tnetworks.addNewFormRules(eth);\n\t\t});\n\n\t\tif ($('#usenat-checkbox').checkbox('is checked')) {\n\t\t\t$('.nated-settings-group').removeClass('disabled');\n\t\t} else {\n\t\t\t$('.nated-settings-group').addClass('disabled');\n\t\t}\n\t},\n\taddNewFormRules(newRowId) {\n\t\tconst nameClass = `name_${newRowId}`;\n\t\tnetworks.validateRules[nameClass] = {\n\t\t\tidentifier: nameClass,\n\t\t\tdepends: `interface_${newRowId}`,\n\t\t\trules: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'empty',\n\t\t\t\t\tprompt: globalTranslate.nw_ValidateNameIsNotBeEmpty,\n\t\t\t\t},\n\t\t\t],\n\n\t\t};\n\n\t\tconst vlanClass = `vlanid_${newRowId}`;\n\t\tnetworks.validateRules[vlanClass] = {\n\t\t\tdepends: `interface_${newRowId}`,\n\t\t\tidentifier: vlanClass,\n\t\t\trules: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'integer[0..4095]',\n\t\t\t\t\tprompt: globalTranslate.nw_ValidateVlanRange,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: `checkVlan[${newRowId}]`,\n\t\t\t\t\tprompt: globalTranslate.nw_ValidateVlanCross,\n\t\t\t\t},\n\t\t\t],\n\n\t\t};\n\n\t\tconst ipaddrClass = `ipaddr_${newRowId}`;\n\t\tnetworks.validateRules[ipaddrClass] = {\n\t\t\tidentifier: ipaddrClass,\n\t\t\tdepends: `not-dhcp-${newRowId}`,\n\t\t\trules: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'empty',\n\t\t\t\t\tprompt: globalTranslate.nw_ValidateIppaddrIsEmpty,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'ipaddr',\n\t\t\t\t\tprompt: globalTranslate.nw_ValidateIppaddrNotRight,\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\n\t\tconst dhcpClass = `dhcp_${newRowId}`;\n\t\tnetworks.validateRules[dhcpClass] = {\n\t\t\tidentifier: dhcpClass,\n\t\t\tdepends: `interface_${newRowId}`,\n\t\t\trules: [\n\t\t\t\t{\n\t\t\t\t\ttype: `dhcpOnVlanNetworks[${newRowId}]`,\n\t\t\t\t\tprompt: globalTranslate.nw_ValidateDHCPOnVlansDontSupport,\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\n\t},\n\tcbBeforeSendForm(settings) {\n\t\tconst result = settings;\n\t\tresult.data = networks.$formObj.form('get values');\n\t\treturn result;\n\t},\n\tcbAfterSendForm() {\n\n\t},\n\tinitializeForm() {\n\t\tForm.$formObj = networks.$formObj;\n\t\tForm.url = `${globalRootUrl}network/save`;\n\t\tForm.validateRules = networks.validateRules;\n\t\tForm.cbBeforeSendForm = networks.cbBeforeSendForm;\n\t\tForm.cbAfterSendForm = networks.cbAfterSendForm;\n\t\tForm.initialize();\n\t},\n};\n\n$.fn.form.settings.rules.ipaddr = (value) => {\n\tlet result = true;\n\tconst f = value.match(/^(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})$/);\n\tif (f == null) {\n\t\tresult = false;\n\t} else {\n\t\tfor (let i = 1; i < 5; i += 1) {\n\t\t\tconst a = f[i];\n\t\t\tif (a > 255) {\n\t\t\t\tresult = false;\n\t\t\t}\n\t\t}\n\t\tif (f[5] > 32) {\n\t\t\tresult = false;\n\t\t}\n\t}\n\treturn result;\n};\n\n$.fn.form.settings.rules.checkVlan = (vlanValue, param) => {\n\tlet result = true;\n\tconst vlansArray = {};\n\tconst allValues = networks.$formObj.form('get values');\n\tif (allValues.interface_new !== undefined && allValues.interface_new > 0) {\n\t\tconst newEthName = allValues[`interface_${allValues.interface_new}`];\n\t\tvlansArray[newEthName] = [allValues.vlanid_new];\n\t\tif (allValues.vlanid_new === '') {\n\t\t\tresult = false;\n\t\t}\n\t}\n\t$.each(allValues, (index, value) => {\n\t\tif (index === 'interface_new' || index === 'vlanid_new') return;\n\t\tif (index.indexOf('vlanid') >= 0) {\n\t\t\tconst ethName = allValues[`interface_${index.split('_')[1]}`];\n\t\t\tif ($.inArray(value, vlansArray[ethName]) >= 0\n\t\t\t\t&& vlanValue === value\n\t\t\t\t&& param === index.split('_')[1]) {\n\t\t\t\tresult = false;\n\t\t\t} else {\n\t\t\t\tif (!(ethName in vlansArray)) {\n\t\t\t\t\tvlansArray[ethName] = [];\n\t\t\t\t}\n\t\t\t\tvlansArray[ethName].push(value);\n\t\t\t}\n\t\t}\n\t});\n\treturn result;\n};\n\n$.fn.form.settings.rules.dhcpOnVlanNetworks = (value, param) => {\n\tlet result = true;\n\tconst vlanValue = networks.$formObj.form('get value', `vlanid_${param}`);\n\tconst dhcpValue = networks.$formObj.form('get value', `dhcp_${param}`);\n\tif (vlanValue > 0 && dhcpValue === 'on') {\n\t\tresult = false;\n\t}\n\treturn result;\n};\n\n$.fn.form.settings.rules.extenalIpHost = () => {\n\tconst allValues = networks.$formObj.form('get values');\n\tif (allValues.usenat === 'on') {\n\t\tif (allValues.exthostname === '' && allValues.extipaddr === '') {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n};\n\n$(document).ready(() => {\n\tnetworks.initialize();\n});\n"],"file":"network-modify.js"}