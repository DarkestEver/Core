{"version":3,"sources":["../../src/main/pbxapi.js"],"names":["PbxApi","pbxPing","Config","pbxUrl","pbxReloadAllModulesUrl","pbxReloadDialplanUrl","pbxReloadSip","pbxReloadIax","pbxReloadQueue","pbxReloadManagers","pbxReloadFeatures","pbxGetHistory","pbxGetSipRegistry","pbxGetIaxRegistry","pbxGetPeersStatus","pbxGetPeerStatus","pbxGetActiveCalls","pbxCheckLicense","systemUploadAudioFile","systemRemoveAudioFile","systemReboot","systemShutDown","systemReloadNetwork","systemReloadFirewall","systemGetBannedIp","systemUnBanIp","systemGetInfo","systemSetDateTime","systemReloadSSH","systemReloadSMTP","systemReloadNginx","systemReloadCron","systemSendTestEmail","systemGetFileContent","systemUpdateCustomFiles","systemStartLogsCapture","systemStopLogsCapture","systemGetExternalIP","systemUpgrade","systemUpgradeOnline","systemGetUpgradeStatus","systemInstallModule","backupGetFilesList","backupDownloadFile","backupDeleteFile","backupRecover","backupStart","backupStop","backupUpload","backupGetEstimatedSize","PingPBX","callback","$","api","url","on","dataType","timeout","onComplete","response","undefined","toUpperCase","onFailure","ReloadAllModules","onSuccess","Object","keys","length","result","ReloadDialplan","ReloadSip","ReloadIax","ReloadQueue","ReloadManagers","ReloadFeatures","ReloadNetwork","ReloadSSH","ReloadFirewall","ReloadNginx","ReloadCron","SystemGetBannedIp","successTest","data","onError","SystemUnBanIp","method","JSON","stringify","GetPeersStatus","errorMessage","element","xhr","status","window","location","globalRootUrl","GetPeerStatus","GetSipProvidersStatuses","GetIaxProvidersStatuses","UpdateMailSettings","SendTestEmail","$data","GetFileContent","UpdateDateTime","UpdateCustomFiles","GetExternalIp","GetCurrentCalls","SystemReboot","SystemShutDown","CheckLicense","error","SystemStartLogsCapture","localStorage","setItem","setTimeout","SystemStopLogsCapture","BackupGetFilesList","BackupDownloadFile","fileId","BackupDeleteFile","urlData","id","BackupRecover","jsonParams","BackupStart","BackupStop","BackupGetEstimatedSize","BackupUpload","file","cache","processData","contentType","beforeSend","settings","newSettings","now","parseInt","Date","FormData","append","onResponse","json","XMLHttpRequest","upload","addEventListener","evt","lengthComputable","percentComplete","loaded","total","percent","SystemUpgrade","SystemUploadAudioFile","extension","name","slice","lastIndexOf","newFileName","blob","Blob","lastModifiedDate","filename","SystemRemoveAudioFile","filePath","SystemReloadModule","moduleName","SystemInstallModule","params","uniqid","md5","updateLink","SystemDeleteModule","SystemUpgradeOnline","SystemGetUpgradeStatus","SystemGetModuleInstallStatus"],"mappings":"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","sourcesContent":["/*\n * Copyright (C) MIKO LLC - All Rights Reserved\n * Unauthorized copying of this file, via any medium is strictly prohibited\n * Proprietary and confidential\n * Written by Nikolay Beketov, 6 2018\n *\n */\n/* global localStorage,globalRootUrl,Config */\n\nconst PbxApi = {\n\tpbxPing: `${Config.pbxUrl}/pbxcore/api/system/ping`,\n\tpbxReloadAllModulesUrl: `${Config.pbxUrl}/pbxcore/api/pbx/reload_all_modules`, // Рестарт всех модулей АТС\n\tpbxReloadDialplanUrl: `${Config.pbxUrl}/pbxcore/api/pbx/reload_dialplan`, // Запуск генератора dialplan, перезапуск dialplan на АТС.\n\tpbxReloadSip: `${Config.pbxUrl}/pbxcore/api/pbx/reload_sip`, // Рестарт модуля SIP.\n\tpbxReloadIax: `${Config.pbxUrl}/pbxcore/api/pbx/reload_iax`, // Рестарт модуля IAX.\n\tpbxReloadQueue: `${Config.pbxUrl}/pbxcore/api/pbx/reload_queues`, // Рестарт модуля очередей.\n\tpbxReloadManagers: `${Config.pbxUrl}/pbxcore/api/pbx/reload_manager`, // Рестарт модуля очередей.\n\tpbxReloadFeatures: `${Config.pbxUrl}/pbxcore/api/pbx/reload_features`,\n\tpbxGetHistory: `${Config.pbxUrl}/pbxcore/api/cdr/get_history`, // Запрос истории звонков POST -d '{\"number\": \"212\", \"start\":\"2018-01-01\", \"end\":\"2019-01-01\"}'\n\tpbxGetSipRegistry: `${Config.pbxUrl}/pbxcore/api/sip/get_registry`,\n\tpbxGetIaxRegistry: `${Config.pbxUrl}/pbxcore/api/iax/get_registry`,\n\tpbxGetPeersStatus: `${Config.pbxUrl}/pbxcore/api/sip/get_peers_statuses`,\n\tpbxGetPeerStatus: `${Config.pbxUrl}/pbxcore/api/sip/get_sip_peer`,\n\tpbxGetActiveCalls: `${Config.pbxUrl}/pbxcore/api/cdr/get_active_calls`, // Получить активные звонки,\n\tpbxCheckLicense: `${Config.pbxUrl}/pbxcore/api/pbx/check_licence`,\n\tsystemUploadAudioFile: `${Config.pbxUrl}/pbxcore/api/system/upload_audio_file`,\n\tsystemRemoveAudioFile: `${Config.pbxUrl}/pbxcore/api/system/remove_audio_file`,\n\tsystemReboot: `${Config.pbxUrl}/pbxcore/api/system/reboot`, // Рестарт ОС\n\tsystemShutDown: `${Config.pbxUrl}/pbxcore/api/system/shutdown`, // Выключить машину\n\tsystemReloadNetwork: `${Config.pbxUrl}/pbxcore/api/system/network_reload`, // Рестарт сетевых интерфейсов.\n\tsystemReloadFirewall: `${Config.pbxUrl}/pbxcore/api/system/reload_firewall`, // Перезагрузка правил firewall\n\tsystemGetBannedIp: `${Config.pbxUrl}/pbxcore/api/system/get_ban_ip`, // Получение забаненных ip\n\tsystemUnBanIp: `${Config.pbxUrl}/pbxcore/api/system/unban_ip`, // Снятие бана IP адреса curl -X POST -d '{\"ip\": \"172.16.156.1\"}'\n\tsystemGetInfo: `${Config.pbxUrl}/pbxcore/api/system/get_info`, // Получение информации о системе\n\tsystemSetDateTime: `${Config.pbxUrl}/pbxcore/api/system/set_date`, // curl -X POST -d '{\"date\": \"2015.12.31-01:01:20\"}',\n\tsystemReloadSSH: `${Config.pbxUrl}/pbxcore/api/system/reload_ssh`,\n\tsystemReloadSMTP: `${Config.pbxUrl}/pbxcore/api/system/reload_msmtp`,\n\tsystemReloadNginx: `${Config.pbxUrl}/pbxcore/api/system/reload_nginx`,\n\tsystemReloadCron: `${Config.pbxUrl}/pbxcore/api/system/reload_cron`,\n\tsystemSendTestEmail: `${Config.pbxUrl}/pbxcore/api/system/send_mail`, // Отправить почту\n\tsystemGetFileContent: `${Config.pbxUrl}/pbxcore/api/system/file_read_content`, // Получить контент файла по имени\n\tsystemUpdateCustomFiles: `${Config.pbxUrl}/pbxcore/api/system/update_custom_files`,\n\tsystemStartLogsCapture: `${Config.pbxUrl}/pbxcore/api/system/start_log`,\n\tsystemStopLogsCapture: `${Config.pbxUrl}/pbxcore/api/system/stop_log`,\n\tsystemGetExternalIP: `${Config.pbxUrl}/pbxcore/api/system/get_external_ip_info`,\n\tsystemUpgrade: `${Config.pbxUrl}/pbxcore/api/system/upgrade`, // Обновление АТС файлом\n\tsystemUpgradeOnline: `${Config.pbxUrl}/pbxcore/api/system/upgrade_online`, // Обновление АТС онлайн\n\tsystemGetUpgradeStatus: `${Config.pbxUrl}/pbxcore/api/system/status_upgrade`, // Получение статуса обновления\n\tsystemInstallModule: `${Config.pbxUrl}/pbxcore/api/modules/upload`,\n\tbackupGetFilesList: `${Config.pbxUrl}/pbxcore/api/backup/list`, // Получить список архивов\n\tbackupDownloadFile: `${Config.pbxUrl}/pbxcore/api/backup/download`, // Получить архив /pbxcore/api/backup/download?id=backup_1530703760\n\tbackupDeleteFile: `${Config.pbxUrl}/pbxcore/api/backup/remove`, // Удалить архив curl http://172.16.156.212/pbxcore/api/backup/remove?id=backup_1530714645\n\tbackupRecover: `${Config.pbxUrl}/pbxcore/api/backup/recover`, // Восстановить архив curl -X POST -d '{\"id\": \"backup_1534838222\", \"options\":{\"backup-sound-files\":\"1\"}}' http://172.16.156.212/pbxcore/api/backup/recover;\n\tbackupStart: `${Config.pbxUrl}/pbxcore/api/backup/start`, // Начать архивирование curl -X POST -d '{\"backup-config\":\"1\",\"backup-records\":\"1\",\"backup-cdr\":\"1\",\"backup-sound-files\":\"1\"}' http://172.16.156.212/pbxcore/api/backup/start;\n\tbackupStop: `${Config.pbxUrl}/pbxcore/api/backup/stop`, // Приостановить архивирование curl -X POST -d '{\"id\":\"backup_1530703760\"}' http://172.16.156.212/pbxcore/api/backup/start;\n\tbackupUpload: `${Config.pbxUrl}/pbxcore/api/backup/upload`, // Загрузка файла на АТС curl -F \"file=@backup_1530703760.zip\" http://172.16.156.212/pbxcore/api/backup/upload;\n\tbackupGetEstimatedSize: `${Config.pbxUrl}/pbxcore/api/backup/get_estimated_size`,\n\n\t/**\n\t * Проверка связи с PBX\n\t * @param callback\n\t */\n\tPingPBX(callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.pbxPing,\n\t\t\ton: 'now',\n\t\t\tdataType: 'text',\n\t\t\ttimeout: 2000,\n\t\t\tonComplete(response) {\n\t\t\t\tif (response !== undefined\n\t\t\t\t\t&& response.toUpperCase() === 'PONG') {\n\t\t\t\t\tcallback(true);\n\t\t\t\t} else {\n\t\t\t\t\tcallback(false);\n\t\t\t\t}\n\t\t\t},\n\t\t\tonFailure() {\n\t\t\t\tcallback(false);\n\t\t\t},\n\t\t});\n\t},\n\n\t/**\n\t * Перезагрузка всех настроек АТС\n\t * @param callback\n\t */\n\tReloadAllModules(callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.pbxReloadAllModulesUrl,\n\t\t\ton: 'now',\n\t\t\tonSuccess(response) {\n\t\t\t\tif (response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS') {\n\t\t\t\t\tcallback('ReloadAllModules');\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Перезагрузка диалпланов\n\t * @param callback\n\t */\n\tReloadDialplan(callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.pbxReloadDialplanUrl,\n\t\t\ton: 'now',\n\t\t\tonSuccess(response) {\n\t\t\t\tif (response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS') {\n\t\t\t\t\tcallback('ReloadDialplan');\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Перезагрузка настроек SIP\n\t * @param callback\n\t */\n\tReloadSip(callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.pbxReloadSip,\n\t\t\ton: 'now',\n\t\t\tonSuccess(response) {\n\t\t\t\tif (response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS') {\n\t\t\t\t\tcallback('ReloadSip');\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Перезагрузка настроек IAX\n\t * @param callback\n\t */\n\tReloadIax(callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.pbxReloadIax,\n\t\t\ton: 'now',\n\t\t\tonSuccess(response) {\n\t\t\t\tif (response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS') {\n\t\t\t\t\tcallback('ReloadIax');\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Перезагрузка настроек Очередей\n\t * @param callback\n\t */\n\tReloadQueue(callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.pbxReloadQueue,\n\t\t\ton: 'now',\n\t\t\tonSuccess(response) {\n\t\t\t\tif (response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS') {\n\t\t\t\t\tcallback('ReloadQueue');\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Перезагрузка настроек менеджеров\n\t * @param callback\n\t */\n\tReloadManagers(callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.pbxReloadManagers,\n\t\t\ton: 'now',\n\t\t\tonSuccess(response) {\n\t\t\t\tif (response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS') {\n\t\t\t\t\tcallback('ReloadManagers');\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Перезагрузка настроек features.conf\n\t * @param callback\n\t */\n\tReloadFeatures(callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.pbxReloadFeatures,\n\t\t\ton: 'now',\n\t\t\tonSuccess(response) {\n\t\t\t\tif (response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS') {\n\t\t\t\t\tcallback('ReloadFeatures');\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Перезагрузка настроек сети\n\t * @param callback\n\t */\n\tReloadNetwork(callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.systemReloadNetwork,\n\t\t\ton: 'now',\n\t\t\tonSuccess(response) {\n\t\t\t\tif (response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS') {\n\t\t\t\t\tcallback('ReloadNetwork');\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Перезагрузка настроек SSH\n\t * @param callback\n\t */\n\tReloadSSH(callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.systemReloadSSH,\n\t\t\ton: 'now',\n\t\t\tonSuccess(response) {\n\t\t\t\tif (response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS') {\n\t\t\t\t\tcallback('ReloadSSH');\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Перезагрузка настроек фаейровола\n\t * @param callback\n\t */\n\tReloadFirewall(callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.systemReloadFirewall,\n\t\t\ton: 'now',\n\t\t\tonSuccess(response) {\n\t\t\t\tif (response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS') {\n\t\t\t\t\tcallback('ReloadFirewall');\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t},\n\n\t/**\n\t * Перезагрузка Nginx\n\t */\n\tReloadNginx(callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.systemReloadNginx,\n\t\t\ton: 'now',\n\t\t\tonSuccess(response) {\n\t\t\t\tif (response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS') {\n\t\t\t\t\tcallback('ReloadNginx');\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Перезагрузка Cron\n\t */\n\tReloadCron(callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.systemReloadCron,\n\t\t\ton: 'now',\n\t\t\tonSuccess(response) {\n\t\t\t\tif (response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS') {\n\t\t\t\t\tcallback('ReloadCron');\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t},\n\n\t/**\n\t * Получение списка забанненых IP адресов\n\t * @param callback\n\t */\n\tSystemGetBannedIp(callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.systemGetBannedIp,\n\t\t\ton: 'now',\n\t\t\tsuccessTest(response) {\n\t\t\t\t// test whether a JSON response is valid\n\t\t\t\treturn response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS';\n\t\t\t},\n\t\t\tonSuccess(response) {\n\t\t\t\tcallback(response.data);\n\t\t\t},\n\t\t\tonError() {\n\t\t\t\tcallback(false);\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Разблокировка IP адреса в fail2ban\n\t * @param callback\n\t * @returns {boolean}\n\t */\n\tSystemUnBanIp(data, callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.systemUnBanIp,\n\t\t\ton: 'now',\n\t\t\tmethod: 'POST',\n\t\t\tdata: JSON.stringify(data),\n\t\t\tsuccessTest(response) {\n\t\t\t\t// test whether a JSON response is valid\n\t\t\t\treturn response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS';\n\t\t\t},\n\t\t\tonSuccess(response) {\n\t\t\t\tcallback(response.data);\n\t\t\t},\n\t\t\tonError() {\n\t\t\t\tcallback(false);\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Получение статуса регистрации пиров\n\t * @param callback\n\t * @returns {boolean}\n\t */\n\tGetPeersStatus(callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.pbxGetPeersStatus,\n\t\t\ton: 'now',\n\t\t\tsuccessTest(response) {\n\t\t\t\t// test whether a JSON response is valid\n\t\t\t\treturn response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS';\n\t\t\t},\n\t\t\tonSuccess(response) {\n\t\t\t\tcallback(response.data);\n\t\t\t},\n\t\t\tonFailure() {\n\t\t\t\tcallback(false);\n\t\t\t},\n\t\t\tonError(errorMessage, element, xhr) {\n\t\t\t\tif (xhr.status === 403) {\n\t\t\t\t\twindow.location = `${globalRootUrl}session/index`;\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Получение статуса регистрации пира\n\t * @param callback\n\t * @returns {boolean}\n\t */\n\tGetPeerStatus(data, callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.pbxGetPeerStatus,\n\t\t\ton: 'now',\n\t\t\tmethod: 'POST',\n\t\t\tdata: JSON.stringify(data),\n\t\t\tsuccessTest(response) {\n\t\t\t\t// test whether a JSON response is valid\n\t\t\t\treturn response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS';\n\t\t\t},\n\t\t\tonSuccess(response) {\n\t\t\t\tcallback(response.data);\n\t\t\t},\n\t\t\tonFailure() {\n\t\t\t\tcallback(false);\n\t\t\t},\n\t\t\tonError(errorMessage, element, xhr) {\n\t\t\t\tif (xhr.status === 403) {\n\t\t\t\t\twindow.location = `${globalRootUrl}session/index`;\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Получение статусов регистрации проовайдеров\n\t * @param callback\n\t */\n\tGetSipProvidersStatuses(callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.pbxGetSipRegistry,\n\t\t\ton: 'now',\n\t\t\tsuccessTest(response) {\n\t\t\t\t// test whether a JSON response is valid\n\t\t\t\treturn response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS';\n\t\t\t},\n\t\t\tonSuccess(response) {\n\t\t\t\tcallback(response.data);\n\t\t\t},\n\t\t\tonError(errorMessage, element, xhr) {\n\t\t\t\tif (xhr.status === 403) {\n\t\t\t\t\twindow.location = `${globalRootUrl}session/index`;\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Получение статусов регистрации проовайдеров IAX\n\t * @param callback\n\t */\n\tGetIaxProvidersStatuses(callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.pbxGetIaxRegistry,\n\t\t\ton: 'now',\n\t\t\tsuccessTest(response) {\n\t\t\t\t// test whether a JSON response is valid\n\t\t\t\treturn response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS';\n\t\t\t},\n\t\t\tonSuccess(response) {\n\t\t\t\tcallback(response.data);\n\t\t\t},\n\t\t\tonError(errorMessage, element, xhr) {\n\t\t\t\tif (xhr.status === 403) {\n\t\t\t\t\twindow.location = `${globalRootUrl}session/index`;\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Обновляет настройки почты на сервере\n\t * @param callback\n\t */\n\tUpdateMailSettings(callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.systemReloadSMTP,\n\t\t\ton: 'now',\n\t\t\tonSuccess(response) {\n\t\t\t\tif (response !== undefined) {\n\t\t\t\t\tcallback(response);\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Отпарвляет тестовое сообщение на почту\n\t * @param $data\n\t */\n\tSendTestEmail($data) {\n\t\t$.api({\n\t\t\turl: PbxApi.systemSendTestEmail,\n\t\t\ton: 'now',\n\t\t\tmethod: 'POST',\n\t\t\tdata: JSON.stringify($data),\n\t\t});\n\t},\n\t/**\n\t * Получить контент файла конфигурации с сервера\n\t * @param $data\n\t * @param callback\n\t */\n\tGetFileContent($data, callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.systemGetFileContent,\n\t\t\ton: 'now',\n\t\t\tmethod: 'POST',\n\t\t\tdata: JSON.stringify($data),\n\t\t\tonSuccess(response) {\n\t\t\t\tif (response !== undefined) {\n\t\t\t\t\tcallback(response);\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Обновляет системное время\n\t * @param $data\n\t */\n\tUpdateDateTime(data) {\n\t\t$.api({\n\t\t\turl: PbxApi.systemSetDateTime,\n\t\t\ton: 'now',\n\t\t\tmethod: 'POST',\n\t\t\tdata: JSON.stringify(data),\n\t\t});\n\t},\n\t/**\n\t * Отправляет информацию о изменении кастомизированных файлов\n\t * @param callback\n\t */\n\tUpdateCustomFiles(callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.systemUpdateCustomFiles,\n\t\t\ton: 'now',\n\t\t\tsuccessTest(response) {\n\t\t\t\t// test whether a JSON response is valid\n\t\t\t\treturn response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS';\n\t\t\t},\n\t\t\tonSuccess() {\n\t\t\t\tcallback('UpdateCustomFiles');\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Получаем информацию о внешнем IP станции\n\t * @param callback\n\t */\n\tGetExternalIp(callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.systemGetExternalIP,\n\t\t\ton: 'now',\n\t\t\tsuccessTest(response) {\n\t\t\t\t// test whether a JSON response is valid\n\t\t\t\treturn response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS';\n\t\t\t},\n\t\t\tonSuccess(response) {\n\t\t\t\tcallback(response.data);\n\t\t\t},\n\t\t\tonError(errorMessage, element, xhr) {\n\t\t\t\tif (xhr.status === 403) {\n\t\t\t\t\twindow.location = `${globalRootUrl}session/index`;\n\t\t\t\t}\n\t\t\t\tcallback(false);\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Получение списка активных вызовов\n\t * @param callback\n\t */\n\tGetCurrentCalls(callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.pbxGetActiveCalls,\n\t\t\ton: 'now',\n\t\t\tsuccessTest(response) {\n\t\t\t\t// test whether a JSON response is valid\n\t\t\t\treturn response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0;\n\t\t\t},\n\t\t\tonSuccess(response) {\n\t\t\t\tif (Object.keys(response).length > 0) {\n\t\t\t\t\tcallback(response);\n\t\t\t\t} else {\n\t\t\t\t\tcallback(false);\n\t\t\t\t}\n\t\t\t},\n\t\t\tonError(errorMessage, element, xhr) {\n\t\t\t\tif (xhr.status === 403) {\n\t\t\t\t\twindow.location = `${globalRootUrl}session/index`;\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Перезагрузка станции\n\t */\n\tSystemReboot() {\n\t\t$.api({\n\t\t\turl: PbxApi.systemReboot,\n\t\t\ton: 'now',\n\t\t});\n\t},\n\t/**\n\t * Выключение станции\n\t */\n\tSystemShutDown() {\n\t\t$.api({\n\t\t\turl: PbxApi.systemShutDown,\n\t\t\ton: 'now',\n\t\t});\n\t},\n\n\t/**\n\t * Проверка доступности необходимых фич в лицензионном ключе\n\t * @param callback\n\t */\n\tCheckLicense(callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.pbxCheckLicense,\n\t\t\ton: 'now',\n\t\t\tonSuccess(response) {\n\t\t\t\tif (response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0) {\n\t\t\t\t\tif (response.result.toUpperCase() === 'ERROR') {\n\t\t\t\t\t\tcallback(response.error);\n\t\t\t\t\t} else if (response.result.toUpperCase() === 'SUCCESS') {\n\t\t\t\t\t\tcallback(true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Запуск сборщика системных логов\n\t */\n\tSystemStartLogsCapture() {\n\t\tlocalStorage.setItem('LogsCaptureStatus', 'started');\n\t\tsetTimeout(() => {\n\t\t\tlocalStorage.setItem('LogsCaptureStatus', 'stopped');\n\t\t}, 5000);\n\t\t$.api({\n\t\t\turl: PbxApi.systemStartLogsCapture,\n\t\t\ton: 'now',\n\t\t});\n\t},\n\t/**\n\t * Остановка сборщика системных логов\n\t */\n\tSystemStopLogsCapture() {\n\t\tlocalStorage.setItem('LogsCaptureStatus', 'stopped');\n\t\twindow.location = PbxApi.systemStopLogsCapture;\n\t},\n\t/**\n\t * Получить список архивов\n\t */\n\tBackupGetFilesList(callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.backupGetFilesList,\n\t\t\ton: 'now',\n\t\t\tsuccessTest(response) {\n\t\t\t\t// test whether a JSON response is valid\n\t\t\t\treturn response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS';\n\t\t\t},\n\t\t\tonSuccess(response) {\n\t\t\t\tcallback(response.data);\n\t\t\t},\n\t\t\tonError() {\n\t\t\t\tcallback(false);\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Скачать файл архива по указанному ID\n\t */\n\tBackupDownloadFile(fileId) {\n\t\twindow.location = `${PbxApi.backupDownloadFile}?id=${fileId}`;\n\t},\n\t/**\n\t * Удалить файл по указанному ID\n\t * @param fileId - идентификатор файла с архивом\n\t * @param callback - функция для обработки результата\n\t */\n\tBackupDeleteFile(fileId, callback) {\n\t\t$.api({\n\t\t\turl: `${PbxApi.backupDeleteFile}?id={id}`,\n\t\t\ton: 'now',\n\t\t\turlData: {\n\t\t\t\tid: fileId,\n\t\t\t},\n\t\t\tsuccessTest(response) {\n\t\t\t\t// test whether a JSON response is valid\n\t\t\t\treturn response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS';\n\t\t\t},\n\t\t\tonSuccess() {\n\t\t\t\tcallback(true);\n\t\t\t},\n\t\t\tonError() {\n\t\t\t\tcallback(false);\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Восстановить систему по указанному ID бекапа\n\t * @param jsonParams - {\"id\": \"backup_1534838222\", \"options\":{\"backup-sound-files\":\"1\"}}'\n\t * @param callback - функция для обработки результата\n\t */\n\tBackupRecover(jsonParams, callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.backupRecover,\n\t\t\tmethod: 'POST',\n\t\t\tdata: JSON.stringify(jsonParams),\n\t\t\ton: 'now',\n\t\t\tsuccessTest(response) {\n\t\t\t\t// test whether a JSON response is valid\n\t\t\t\treturn response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS';\n\t\t\t},\n\t\t\tonSuccess() {\n\t\t\t\tcallback(true);\n\t\t\t},\n\t\t\tonError() {\n\t\t\t\tcallback(false);\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Начало архивирование системы\n\t * @param jsonParams -\n\t * {\n\t * \t\"backup-config\":\"1\",\n\t * \t\"backup-records\":\"1\",\n\t * \t\"backup-cdr\":\"1\",\n\t * \t\"backup-sound-files\":\"1\"\n\t * \t}\n\t * @param callback - функция для обработки результата\n\t */\n\tBackupStart(jsonParams, callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.backupStart,\n\t\t\ton: 'now',\n\t\t\tmethod: 'POST',\n\t\t\tdata: JSON.stringify(jsonParams),\n\t\t\tsuccessTest(response) {\n\t\t\t\t// test whether a JSON response is valid\n\t\t\t\treturn Object.keys(response).length > 0 && response.result.toUpperCase() === 'SUCCESS';\n\t\t\t},\n\t\t\tonSuccess(response) {\n\t\t\t\tcallback(response.data);\n\t\t\t},\n\t\t\tonError() {\n\t\t\t\tcallback(false);\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Приостановить архивирование системы\n\t * @param fileId - ИД с файлом архива\n\t * @param callback - функция для обработки результата\n\t */\n\tBackupStop(fileId, callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.backupStop,\n\t\t\ton: 'now',\n\t\t\tmethod: 'POST',\n\t\t\tdata: `{'id':'${fileId}'}`,\n\t\t\tsuccessTest(response) {\n\t\t\t\t// test whether a JSON response is valid\n\t\t\t\treturn response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS';\n\t\t\t},\n\t\t\tonSuccess(response) {\n\t\t\t\tcallback(response.data);\n\t\t\t},\n\t\t\tonError() {\n\t\t\t\tcallback(false);\n\t\t\t},\n\t\t});\n\t},\n\n\t/**\n\t * Получить размер файлов для бекапа\n\t * @param callback - функция для обработки результата\n\t */\n\tBackupGetEstimatedSize(callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.backupGetEstimatedSize,\n\t\t\ton: 'now',\n\t\t\tsuccessTest(response) {\n\t\t\t\t// test whether a JSON response is valid\n\t\t\t\treturn response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS';\n\t\t\t},\n\t\t\tonSuccess(response) {\n\t\t\t\tcallback(response.data);\n\t\t\t},\n\t\t\tonError() {\n\t\t\t\tcallback(false);\n\t\t\t},\n\t\t});\n\t},\n\n\t/**\n\t * Загрузить на станцию файл бекапа\n\t * @param file - Тело загружаемого файла\n\t * @param callback - функция для обработки результата\n\t */\n\tBackupUpload(file, callback) {\n\t\t$.api({\n\t\t\ton: 'now',\n\t\t\turl: PbxApi.backupUpload,\n\t\t\tmethod: 'POST',\n\t\t\tcache: false,\n\t\t\tprocessData: false,\n\t\t\tcontentType: false,\n\t\t\tbeforeSend: (settings) => {\n\t\t\t\tconst newSettings = settings;\n\t\t\t\tconst now = parseInt(Date.now() / 1000, 10);\n\t\t\t\tnewSettings.data = new FormData();\n\t\t\t\tnewSettings.data.append(`backup_${now}`, file);\n\t\t\t\treturn newSettings;\n\t\t\t},\n\t\t\tonResponse: response => response,\n\t\t\tsuccessTest: response => !response.error || false, // change this\n\t\t\tonSuccess: (json) => {\n\t\t\t\tcallback(json);\n\t\t\t},\n\t\t\tonFailure: (json) => {\n\t\t\t\tcallback(json);\n\t\t\t},\n\t\t\txhr: () => {\n\t\t\t\tconst xhr = new window.XMLHttpRequest();\n\t\t\t\t// прогресс загрузки на сервер\n\t\t\t\txhr.upload.addEventListener('progress', (evt) => {\n\t\t\t\t\tif (evt.lengthComputable) {\n\t\t\t\t\t\tconst percentComplete = 100 * (evt.loaded / evt.total);\n\t\t\t\t\t\tconst json = {\n\t\t\t\t\t\t\tfunction: 'upload_progress',\n\t\t\t\t\t\t\tpercent: percentComplete,\n\t\t\t\t\t\t};\n\t\t\t\t\t\t// делать что-то...\n\t\t\t\t\t\tcallback(json);\n\t\t\t\t\t}\n\t\t\t\t}, false);\n\t\t\t\treturn xhr;\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Загрузить на станцию файл обновления\n\t * @param file - Тело загружаемого файла\n\t * @param callback - функция для обработки результата\n\t */\n\tSystemUpgrade(file, callback) {\n\t\t$.api({\n\t\t\ton: 'now',\n\t\t\turl: PbxApi.systemUpgrade,\n\t\t\tmethod: 'POST',\n\t\t\tcache: false,\n\t\t\tprocessData: false,\n\t\t\tcontentType: false,\n\t\t\tbeforeSend: (settings) => {\n\t\t\t\tconst newSettings = settings;\n\t\t\t\tconst now = parseInt(Date.now() / 1000, 10);\n\t\t\t\tnewSettings.data = new FormData();\n\t\t\t\tnewSettings.data.append(`upgrade_${now}`, file);\n\t\t\t\treturn newSettings;\n\t\t\t},\n\t\t\tonResponse: response => response,\n\t\t\tsuccessTest: response => !response.error || false, // change this\n\t\t\tonSuccess: (json) => {\n\t\t\t\tcallback(json);\n\t\t\t},\n\t\t\tonFailure: (json) => {\n\t\t\t\tcallback(json);\n\t\t\t},\n\t\t\txhr: () => {\n\t\t\t\tconst xhr = new window.XMLHttpRequest();\n\t\t\t\t// прогресс загрузки на сервер\n\t\t\t\txhr.upload.addEventListener('progress', (evt) => {\n\t\t\t\t\tif (evt.lengthComputable) {\n\t\t\t\t\t\tconst percentComplete = 100 * (evt.loaded / evt.total);\n\t\t\t\t\t\tconst json = {\n\t\t\t\t\t\t\tfunction: 'upload_progress',\n\t\t\t\t\t\t\tpercent: percentComplete,\n\t\t\t\t\t\t};\n\t\t\t\t\t\t// делать что-то...\n\t\t\t\t\t\tcallback(json);\n\t\t\t\t\t}\n\t\t\t\t}, false);\n\t\t\t\treturn xhr;\n\t\t\t},\n\t\t});\n\t},\n\n\t/**\n\t * Загрузить на станцию файл записи\n\t * @param file - Тело загружаемого файла\n\t * @param callback - функция для обработки результата\n\t */\n\tSystemUploadAudioFile(file, callback) {\n\t\t$.api({\n\t\t\ton: 'now',\n\t\t\turl: PbxApi.systemUploadAudioFile,\n\t\t\tmethod: 'POST',\n\t\t\tcache: false,\n\t\t\tprocessData: false,\n\t\t\tcontentType: false,\n\t\t\tbeforeSend: (settings) => {\n\t\t\t\tconst extension = file.name.slice((file.name.lastIndexOf('.') - 1 >>> 0) + 2);\n\t\t\t\tconst newFileName = `${parseInt(Date.now() / 1000, 10)}.${extension}`;\n\t\t\t\tconst newSettings = settings;\n\t\t\t\t// const newFile = new File([file], newFileName);\n\t\t\t\tconst blob = new Blob([file]);\n\t\t\t\tblob.lastModifiedDate = new Date();\n\t\t\t\tnewSettings.data = new FormData();\n\t\t\t\t// newSettings.data.append(newFileName, newFile);\n\t\t\t\tnewSettings.data.append('file', blob, newFileName);\n\t\t\t\treturn newSettings;\n\t\t\t},\n\t\t\tsuccessTest(response) {\n\t\t\t\t// test whether a JSON response is valid\n\t\t\t\treturn response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS';\n\t\t\t},\n\t\t\tonSuccess(response) {\n\t\t\t\tcallback(response.filename);\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Получить список архивов\n\t */\n\tSystemRemoveAudioFile(filePath) {\n\t\t$.api({\n\t\t\turl: PbxApi.systemRemoveAudioFile,\n\t\t\ton: 'now',\n\t\t\tmethod: 'POST',\n\t\t\tdata: `{'filename':'${filePath}'}`,\n\t\t});\n\t},\n\n\t/**\n\t * Перезапуск модулей расширений\n\t */\n\tSystemReloadModule(moduleName) {\n\t\t$.api({\n\t\t\turl: `${Config.pbxUrl}/pbxcore/api/modules/${moduleName}/reload`,\n\t\t\ton: 'now',\n\t\t});\n\t},\n\t/**\n\t * Установка модуля расширения\n\t *\n\t */\n\tSystemInstallModule(params) {\n\t\t$.api({\n\t\t\turl: PbxApi.systemInstallModule,\n\t\t\ton: 'now',\n\t\t\tmethod: 'POST',\n\t\t\tdata: `{\"uniqid\":\"${params.uniqid}\",\"md5\":\"${params.md5}\",\"url\":\"${params.updateLink}\"}`,\n\t\t});\n\t},\n\t/**\n\t * Удаление модуля расширения\n\t *\n\t */\n\tSystemDeleteModule(moduleName, callback) {\n\t\t$.api({\n\t\t\turl: `${Config.pbxUrl}/pbxcore/api/modules/${moduleName}/uninstall`,\n\t\t\ton: 'now',\n\t\t\tsuccessTest(response) {\n\t\t\t\t// test whether a JSON response is valid\n\t\t\t\treturn response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS';\n\t\t\t},\n\t\t\tonSuccess() {\n\t\t\t\tcallback(true);\n\t\t\t},\n\t\t\tonError() {\n\t\t\t\tcallback(false);\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Установка обновления PBX\n\t *\n\t */\n\tSystemUpgradeOnline(params) {\n\t\t$.api({\n\t\t\turl: PbxApi.systemUpgradeOnline,\n\t\t\ton: 'now',\n\t\t\tmethod: 'POST',\n\t\t\tdata: `{\"md5\":\"${params.md5}\",\"url\":\"${params.updateLink}\"}`,\n\t\t});\n\t},\n\n\t/**\n\t * Получение статуса обновления станции\n\t */\n\tSystemGetUpgradeStatus(callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.systemGetUpgradeStatus,\n\t\t\ton: 'now',\n\t\t\tsuccessTest(response) {\n\t\t\t\t// test whether a JSON response is valid\n\t\t\t\treturn response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS';\n\t\t\t},\n\t\t\tonSuccess(response) {\n\t\t\t\tcallback(response);\n\t\t\t},\n\t\t\tonError() {\n\t\t\t\tcallback(false);\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Проверка статуса установки модуля\n\t * @param moduleName - uniqid модуля\n\t * @param callback - функция для обработки результата\n\t */\n\tSystemGetModuleInstallStatus(moduleName, callback) {\n\t\t$.api({\n\t\t\turl: `${Config.pbxUrl}/pbxcore/api/modules/${moduleName}/status`,\n\t\t\ton: 'now',\n\t\t\tsuccessTest(response) {\n\t\t\t\t// test whether a JSON response is valid\n\t\t\t\treturn response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS';\n\t\t\t},\n\t\t\tonSuccess(response) {\n\t\t\t\tcallback(response);\n\t\t\t},\n\t\t\tonError() {\n\t\t\t\tcallback(false);\n\t\t\t},\n\t\t});\n\t},\n\n};\n\n// export default PbxApi;\n"],"file":"pbxapi.js"}