{"version":3,"sources":["../../src/main/pbxapi.js"],"names":["PbxApi","pbxPing","Config","pbxUrl","pbxReloadAllModulesUrl","pbxReloadDialplanUrl","pbxReloadSip","pbxReloadIax","pbxReloadQueue","pbxReloadManagers","pbxReloadFeatures","pbxGetHistory","pbxGetSipRegistry","pbxGetIaxRegistry","pbxGetPeersStatus","pbxGetPeerStatus","pbxGetActiveCalls","pbxGetActiveChannels","pbxCheckLicense","systemUploadAudioFile","systemRemoveAudioFile","systemReboot","systemShutDown","systemReloadNetwork","systemReloadFirewall","systemGetBannedIp","systemUnBanIp","systemGetInfo","systemSetDateTime","systemReloadSSH","systemReloadSMTP","systemReloadNginx","systemReloadCron","systemSendTestEmail","systemGetFileContent","systemUpdateCustomFiles","systemStartLogsCapture","systemStopLogsCapture","systemGetExternalIP","systemUpgrade","systemUpgradeOnline","systemGetUpgradeStatus","systemInstallModule","backupGetFilesList","backupDownloadFile","backupDeleteFile","backupRecover","backupStart","backupStop","backupUpload","backupGetEstimatedSize","backupStatusUpload","backupStartScheduled","tryParseJSON","jsonString","o","JSON","parse","e","PingPBX","callback","$","api","url","on","dataType","timeout","onComplete","response","undefined","toUpperCase","onFailure","ReloadAllModules","onSuccess","Object","keys","length","result","ReloadDialplan","ReloadSip","ReloadIax","ReloadQueue","ReloadManagers","ReloadFeatures","ReloadNetwork","ReloadSSH","ReloadFirewall","ReloadNginx","ReloadCron","SystemGetBannedIp","successTest","data","onError","SystemUnBanIp","method","stringify","GetPeersStatus","errorMessage","element","xhr","status","window","location","globalRootUrl","GetPeerStatus","GetSipProvidersStatuses","GetIaxProvidersStatuses","UpdateMailSettings","SendTestEmail","message","GetFileContent","$data","UpdateDateTime","UpdateCustomFiles","GetExternalIp","GetCurrentCalls","SystemReboot","SystemShutDown","CheckLicense","error","SystemStartLogsCapture","localStorage","setItem","setTimeout","SystemStopLogsCapture","BackupGetFilesList","BackupDownloadFile","fileId","BackupDeleteFile","urlData","id","BackupRecover","jsonParams","BackupStart","BackupStop","BackupGetEstimatedSize","BackupUpload","file","cache","processData","contentType","beforeSend","settings","newSettings","now","parseInt","Date","FormData","append","onResponse","json","XMLHttpRequest","upload","addEventListener","evt","lengthComputable","percentComplete","loaded","total","percent","BackupStatusUpload","BackupStartScheduled","SystemUpgrade","SystemUploadAudioFile","extension","name","slice","lastIndexOf","newFileName","blob","Blob","lastModifiedDate","filename","SystemRemoveAudioFile","filePath","SystemReloadModule","moduleName","SystemInstallModule","params","uniqid","md5","size","updateLink","SystemDeleteModule","keepSettings","SystemUpgradeOnline","SystemGetUpgradeStatus","SystemGetModuleInstallStatus"],"mappings":"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","sourcesContent":["/*\n * Copyright (C) MIKO LLC - All Rights Reserved\n * Unauthorized copying of this file, via any medium is strictly prohibited\n * Proprietary and confidential\n * Written by Nikolay Beketov, 6 2018\n *\n */\n/* global localStorage,globalRootUrl,Config */\n\nconst PbxApi = {\n\tpbxPing: `${Config.pbxUrl}/pbxcore/api/system/ping`,\n\tpbxReloadAllModulesUrl: `${Config.pbxUrl}/pbxcore/api/pbx/reload_all_modules`, // Рестарт всех модулей АТС\n\tpbxReloadDialplanUrl: `${Config.pbxUrl}/pbxcore/api/pbx/reload_dialplan`, // Запуск генератора dialplan, перезапуск dialplan на АТС.\n\tpbxReloadSip: `${Config.pbxUrl}/pbxcore/api/pbx/reload_sip`, // Рестарт модуля SIP.\n\tpbxReloadIax: `${Config.pbxUrl}/pbxcore/api/pbx/reload_iax`, // Рестарт модуля IAX.\n\tpbxReloadQueue: `${Config.pbxUrl}/pbxcore/api/pbx/reload_queues`, // Рестарт модуля очередей.\n\tpbxReloadManagers: `${Config.pbxUrl}/pbxcore/api/pbx/reload_manager`, // Рестарт модуля очередей.\n\tpbxReloadFeatures: `${Config.pbxUrl}/pbxcore/api/pbx/reload_features`,\n\tpbxGetHistory: `${Config.pbxUrl}/pbxcore/api/cdr/get_history`, // Запрос истории звонков POST -d '{\"number\": \"212\", \"start\":\"2018-01-01\", \"end\":\"2019-01-01\"}'\n\tpbxGetSipRegistry: `${Config.pbxUrl}/pbxcore/api/sip/get_registry`,\n\tpbxGetIaxRegistry: `${Config.pbxUrl}/pbxcore/api/iax/get_registry`,\n\tpbxGetPeersStatus: `${Config.pbxUrl}/pbxcore/api/sip/get_peers_statuses`,\n\tpbxGetPeerStatus: `${Config.pbxUrl}/pbxcore/api/sip/get_sip_peer`,\n\tpbxGetActiveCalls: `${Config.pbxUrl}/pbxcore/api/cdr/get_active_calls`, // Получить активные звонки,\n\tpbxGetActiveChannels: `${Config.pbxUrl}/pbxcore/api/cdr/get_active_channels`, // Получить активные звонки,\n\tpbxCheckLicense: `${Config.pbxUrl}/pbxcore/api/pbx/check_licence`,\n\tsystemUploadAudioFile: `${Config.pbxUrl}/pbxcore/api/system/upload_audio_file`,\n\tsystemRemoveAudioFile: `${Config.pbxUrl}/pbxcore/api/system/remove_audio_file`,\n\tsystemReboot: `${Config.pbxUrl}/pbxcore/api/system/reboot`, // Рестарт ОС\n\tsystemShutDown: `${Config.pbxUrl}/pbxcore/api/system/shutdown`, // Выключить машину\n\tsystemReloadNetwork: `${Config.pbxUrl}/pbxcore/api/system/network_reload`, // Рестарт сетевых интерфейсов.\n\tsystemReloadFirewall: `${Config.pbxUrl}/pbxcore/api/system/reload_firewall`, // Перезагрузка правил firewall\n\tsystemGetBannedIp: `${Config.pbxUrl}/pbxcore/api/system/get_ban_ip`, // Получение забаненных ip\n\tsystemUnBanIp: `${Config.pbxUrl}/pbxcore/api/system/unban_ip`, // Снятие бана IP адреса curl -X POST -d '{\"ip\": \"172.16.156.1\"}'\n\tsystemGetInfo: `${Config.pbxUrl}/pbxcore/api/system/get_info`, // Получение информации о системе\n\tsystemSetDateTime: `${Config.pbxUrl}/pbxcore/api/system/set_date`, // curl -X POST -d '{\"date\": \"2015.12.31-01:01:20\"}',\n\tsystemReloadSSH: `${Config.pbxUrl}/pbxcore/api/system/reload_ssh`,\n\tsystemReloadSMTP: `${Config.pbxUrl}/pbxcore/api/system/reload_msmtp`,\n\tsystemReloadNginx: `${Config.pbxUrl}/pbxcore/api/system/reload_nginx`,\n\tsystemReloadCron: `${Config.pbxUrl}/pbxcore/api/system/reload_cron`,\n\tsystemSendTestEmail: `${Config.pbxUrl}/pbxcore/api/system/send_mail`, // Отправить почту\n\tsystemGetFileContent: `${Config.pbxUrl}/pbxcore/api/system/file_read_content`, // Получить контент файла по имени\n\tsystemUpdateCustomFiles: `${Config.pbxUrl}/pbxcore/api/system/update_custom_files`,\n\tsystemStartLogsCapture: `${Config.pbxUrl}/pbxcore/api/system/start_log`,\n\tsystemStopLogsCapture: `${Config.pbxUrl}/pbxcore/api/system/stop_log`,\n\tsystemGetExternalIP: `${Config.pbxUrl}/pbxcore/api/system/get_external_ip_info`,\n\tsystemUpgrade: `${Config.pbxUrl}/pbxcore/api/system/upgrade`, // Обновление АТС файлом\n\tsystemUpgradeOnline: `${Config.pbxUrl}/pbxcore/api/system/upgrade_online`, // Обновление АТС онлайн\n\tsystemGetUpgradeStatus: `${Config.pbxUrl}/pbxcore/api/system/status_upgrade`, // Получение статуса обновления\n\tsystemInstallModule: `${Config.pbxUrl}/pbxcore/api/modules/upload`,\n\tbackupGetFilesList: `${Config.pbxUrl}/pbxcore/api/backup/list`, // Получить список архивов\n\tbackupDownloadFile: `${Config.pbxUrl}/pbxcore/api/backup/download`, // Получить архив /pbxcore/api/backup/download?id=backup_1530703760\n\tbackupDeleteFile: `${Config.pbxUrl}/pbxcore/api/backup/remove`, // Удалить архив curl http://172.16.156.212/pbxcore/api/backup/remove?id=backup_1530714645\n\tbackupRecover: `${Config.pbxUrl}/pbxcore/api/backup/recover`, // Восстановить архив curl -X POST -d '{\"id\": \"backup_1534838222\", \"options\":{\"backup-sound-files\":\"1\"}}' http://172.16.156.212/pbxcore/api/backup/recover;\n\tbackupStart: `${Config.pbxUrl}/pbxcore/api/backup/start`, // Начать архивирование curl -X POST -d '{\"backup-config\":\"1\",\"backup-records\":\"1\",\"backup-cdr\":\"1\",\"backup-sound-files\":\"1\"}' http://172.16.156.212/pbxcore/api/backup/start;\n\tbackupStop: `${Config.pbxUrl}/pbxcore/api/backup/stop`, // Приостановить архивирование curl -X POST -d '{\"id\":\"backup_1530703760\"}' http://172.16.156.212/pbxcore/api/backup/start;\n\tbackupUpload: `${Config.pbxUrl}/pbxcore/api/backup/upload`, // Загрузка файла на АТС curl -F \"file=@backup_1530703760.zip\" http://172.16.156.212/pbxcore/api/backup/upload;\n\tbackupGetEstimatedSize: `${Config.pbxUrl}/pbxcore/api/backup/get_estimated_size`,\n\tbackupStatusUpload: `${Config.pbxUrl}/pbxcore/api/backup/status_upload`, // curl 'http://172.16.156.223/pbxcore/api/backup/status_upload?backup_id=backup_1562746816'\n\tbackupStartScheduled: `${Config.pbxUrl}/pbxcore/api/backup/start_scheduled`, // curl 'http://172.16.156.223/pbxcore/api/backup/start_scheduled'\n\n\n\t/**\n\t * Проверка ответа на JSON\n\t * @param jsonString\n\t * @returns {boolean|any}\n\t */\n\ttryParseJSON(jsonString) {\n\t\ttry {\n\t\t\tconst o = JSON.parse(jsonString);\n\n\t\t\t// Handle non-exception-throwing cases:\n\t\t\t// Neither JSON.parse(false) or JSON.parse(1234) throw errors, hence the type-checking,\n\t\t\t// but... JSON.parse(null) returns null, and typeof null === \"object\",\n\t\t\t// so we must check for that, too. Thankfully, null is falsey, so this suffices:\n\t\t\tif (o && typeof o === 'object') {\n\t\t\t\treturn o;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t//\n\t\t}\n\t\treturn false;\n\t},\n\t/**\n\t * Проверка связи с PBX\n\t * @param callback\n\t */\n\tPingPBX(callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.pbxPing,\n\t\t\ton: 'now',\n\t\t\tdataType: 'text',\n\t\t\ttimeout: 2000,\n\t\t\tonComplete(response) {\n\t\t\t\tif (response !== undefined\n\t\t\t\t\t&& response.toUpperCase() === 'PONG') {\n\t\t\t\t\tcallback(true);\n\t\t\t\t} else {\n\t\t\t\t\tcallback(false);\n\t\t\t\t}\n\t\t\t},\n\t\t\tonFailure() {\n\t\t\t\tcallback(false);\n\t\t\t},\n\t\t});\n\t},\n\n\t/**\n\t * Перезагрузка всех настроек АТС\n\t * @param callback\n\t */\n\tReloadAllModules(callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.pbxReloadAllModulesUrl,\n\t\t\ton: 'now',\n\t\t\tonSuccess(response) {\n\t\t\t\tif (response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS') {\n\t\t\t\t\tcallback('ReloadAllModules');\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Перезагрузка диалпланов\n\t * @param callback\n\t */\n\tReloadDialplan(callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.pbxReloadDialplanUrl,\n\t\t\ton: 'now',\n\t\t\tonSuccess(response) {\n\t\t\t\tif (response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS') {\n\t\t\t\t\tcallback('ReloadDialplan');\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Перезагрузка настроек SIP\n\t * @param callback\n\t */\n\tReloadSip(callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.pbxReloadSip,\n\t\t\ton: 'now',\n\t\t\tonSuccess(response) {\n\t\t\t\tif (response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS') {\n\t\t\t\t\tcallback('ReloadSip');\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Перезагрузка настроек IAX\n\t * @param callback\n\t */\n\tReloadIax(callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.pbxReloadIax,\n\t\t\ton: 'now',\n\t\t\tonSuccess(response) {\n\t\t\t\tif (response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS') {\n\t\t\t\t\tcallback('ReloadIax');\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Перезагрузка настроек Очередей\n\t * @param callback\n\t */\n\tReloadQueue(callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.pbxReloadQueue,\n\t\t\ton: 'now',\n\t\t\tonSuccess(response) {\n\t\t\t\tif (response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS') {\n\t\t\t\t\tcallback('ReloadQueue');\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Перезагрузка настроек менеджеров\n\t * @param callback\n\t */\n\tReloadManagers(callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.pbxReloadManagers,\n\t\t\ton: 'now',\n\t\t\tonSuccess(response) {\n\t\t\t\tif (response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS') {\n\t\t\t\t\tcallback('ReloadManagers');\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Перезагрузка настроек features.conf\n\t * @param callback\n\t */\n\tReloadFeatures(callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.pbxReloadFeatures,\n\t\t\ton: 'now',\n\t\t\tonSuccess(response) {\n\t\t\t\tif (response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS') {\n\t\t\t\t\tcallback('ReloadFeatures');\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Перезагрузка настроек сети\n\t * @param callback\n\t */\n\tReloadNetwork(callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.systemReloadNetwork,\n\t\t\ton: 'now',\n\t\t\tonSuccess(response) {\n\t\t\t\tif (response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS') {\n\t\t\t\t\tcallback('ReloadNetwork');\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Перезагрузка настроек SSH\n\t * @param callback\n\t */\n\tReloadSSH(callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.systemReloadSSH,\n\t\t\ton: 'now',\n\t\t\tonSuccess(response) {\n\t\t\t\tif (response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS') {\n\t\t\t\t\tcallback('ReloadSSH');\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Перезагрузка настроек фаейровола\n\t * @param callback\n\t */\n\tReloadFirewall(callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.systemReloadFirewall,\n\t\t\ton: 'now',\n\t\t\tonSuccess(response) {\n\t\t\t\tif (response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS') {\n\t\t\t\t\tcallback('ReloadFirewall');\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t},\n\n\t/**\n\t * Перезагрузка Nginx\n\t */\n\tReloadNginx(callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.systemReloadNginx,\n\t\t\ton: 'now',\n\t\t\tonSuccess(response) {\n\t\t\t\tif (response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS') {\n\t\t\t\t\tcallback('ReloadNginx');\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Перезагрузка Cron\n\t */\n\tReloadCron(callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.systemReloadCron,\n\t\t\ton: 'now',\n\t\t\tonSuccess(response) {\n\t\t\t\tif (response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS') {\n\t\t\t\t\tcallback('ReloadCron');\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t},\n\n\t/**\n\t * Получение списка забанненых IP адресов\n\t * @param callback\n\t */\n\tSystemGetBannedIp(callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.systemGetBannedIp,\n\t\t\ton: 'now',\n\t\t\tsuccessTest(response) {\n\t\t\t\t// test whether a JSON response is valid\n\t\t\t\treturn response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS';\n\t\t\t},\n\t\t\tonSuccess(response) {\n\t\t\t\tcallback(response.data);\n\t\t\t},\n\t\t\tonError() {\n\t\t\t\tcallback(false);\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Разблокировка IP адреса в fail2ban\n\t * @param callback\n\t * @returns {boolean}\n\t */\n\tSystemUnBanIp(data, callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.systemUnBanIp,\n\t\t\ton: 'now',\n\t\t\tmethod: 'POST',\n\t\t\tdata: JSON.stringify(data),\n\t\t\tsuccessTest(response) {\n\t\t\t\t// test whether a JSON response is valid\n\t\t\t\treturn response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS';\n\t\t\t},\n\t\t\tonSuccess(response) {\n\t\t\t\tcallback(response.data);\n\t\t\t},\n\t\t\tonError() {\n\t\t\t\tcallback(false);\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Получение статуса регистрации пиров\n\t * @param callback\n\t * @returns {boolean}\n\t */\n\tGetPeersStatus(callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.pbxGetPeersStatus,\n\t\t\ton: 'now',\n\t\t\tsuccessTest(response) {\n\t\t\t\t// test whether a JSON response is valid\n\t\t\t\treturn response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS';\n\t\t\t},\n\t\t\tonSuccess(response) {\n\t\t\t\tcallback(response.data);\n\t\t\t},\n\t\t\tonFailure() {\n\t\t\t\tcallback(false);\n\t\t\t},\n\t\t\tonError(errorMessage, element, xhr) {\n\t\t\t\tif (xhr.status === 403) {\n\t\t\t\t\twindow.location = `${globalRootUrl}session/index`;\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Получение статуса регистрации пира\n\t * @param callback\n\t * @returns {boolean}\n\t */\n\tGetPeerStatus(data, callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.pbxGetPeerStatus,\n\t\t\ton: 'now',\n\t\t\tmethod: 'POST',\n\t\t\tdata: JSON.stringify(data),\n\t\t\tsuccessTest(response) {\n\t\t\t\t// test whether a JSON response is valid\n\t\t\t\treturn response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS';\n\t\t\t},\n\t\t\tonSuccess(response) {\n\t\t\t\tcallback(response.data);\n\t\t\t},\n\t\t\tonFailure() {\n\t\t\t\tcallback(false);\n\t\t\t},\n\t\t\tonError(errorMessage, element, xhr) {\n\t\t\t\tif (xhr.status === 403) {\n\t\t\t\t\twindow.location = `${globalRootUrl}session/index`;\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Получение статусов регистрации проовайдеров\n\t * @param callback\n\t */\n\tGetSipProvidersStatuses(callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.pbxGetSipRegistry,\n\t\t\ton: 'now',\n\t\t\tsuccessTest(response) {\n\t\t\t\t// test whether a JSON response is valid\n\t\t\t\treturn response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS';\n\t\t\t},\n\t\t\tonSuccess(response) {\n\t\t\t\tcallback(response.data);\n\t\t\t},\n\t\t\tonError(errorMessage, element, xhr) {\n\t\t\t\tif (xhr.status === 403) {\n\t\t\t\t\twindow.location = `${globalRootUrl}session/index`;\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Получение статусов регистрации проовайдеров IAX\n\t * @param callback\n\t */\n\tGetIaxProvidersStatuses(callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.pbxGetIaxRegistry,\n\t\t\ton: 'now',\n\t\t\tsuccessTest(response) {\n\t\t\t\t// test whether a JSON response is valid\n\t\t\t\treturn response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS';\n\t\t\t},\n\t\t\tonSuccess(response) {\n\t\t\t\tcallback(response.data);\n\t\t\t},\n\t\t\tonError(errorMessage, element, xhr) {\n\t\t\t\tif (xhr.status === 403) {\n\t\t\t\t\twindow.location = `${globalRootUrl}session/index`;\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Обновляет настройки почты на сервере\n\t * @param callback\n\t */\n\tUpdateMailSettings(callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.systemReloadSMTP,\n\t\t\ton: 'now',\n\t\t\tonSuccess(response) {\n\t\t\t\tif (response !== undefined) {\n\t\t\t\t\tcallback(response);\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Отпарвляет тестовое сообщение на почту\n\t * @param data\n\t */\n\tSendTestEmail(data, callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.systemSendTestEmail,\n\t\t\ton: 'now',\n\t\t\tmethod: 'POST',\n\t\t\tdata: JSON.stringify(data),\n\t\t\tsuccessTest(response) {\n\t\t\t\t// test whether a JSON response is valid\n\t\t\t\treturn response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS';\n\t\t\t},\n\t\t\tonSuccess() {\n\t\t\t\tcallback(true);\n\t\t\t},\n\t\t\tonFailure(response) {\n\t\t\t\tcallback(response.message);\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Получить контент файла конфигурации с сервера\n\t * @param $data\n\t * @param callback\n\t */\n\tGetFileContent($data, callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.systemGetFileContent,\n\t\t\ton: 'now',\n\t\t\tmethod: 'POST',\n\t\t\tdata: JSON.stringify($data),\n\t\t\tonSuccess(response) {\n\t\t\t\tif (response !== undefined) {\n\t\t\t\t\tcallback(response);\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Обновляет системное время\n\t * @param $data\n\t */\n\tUpdateDateTime(data) {\n\t\t$.api({\n\t\t\turl: PbxApi.systemSetDateTime,\n\t\t\ton: 'now',\n\t\t\tmethod: 'POST',\n\t\t\tdata: JSON.stringify(data),\n\t\t});\n\t},\n\t/**\n\t * Отправляет информацию о изменении кастомизированных файлов\n\t * @param callback\n\t */\n\tUpdateCustomFiles(callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.systemUpdateCustomFiles,\n\t\t\ton: 'now',\n\t\t\tsuccessTest(response) {\n\t\t\t\t// test whether a JSON response is valid\n\t\t\t\treturn response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS';\n\t\t\t},\n\t\t\tonSuccess() {\n\t\t\t\tcallback('UpdateCustomFiles');\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Получаем информацию о внешнем IP станции\n\t * @param callback\n\t */\n\tGetExternalIp(callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.systemGetExternalIP,\n\t\t\ton: 'now',\n\t\t\tsuccessTest(response) {\n\t\t\t\t// test whether a JSON response is valid\n\t\t\t\treturn response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS';\n\t\t\t},\n\t\t\tonSuccess(response) {\n\t\t\t\tcallback(response.data);\n\t\t\t},\n\t\t\tonError(errorMessage, element, xhr) {\n\t\t\t\tif (xhr.status === 403) {\n\t\t\t\t\twindow.location = `${globalRootUrl}session/index`;\n\t\t\t\t}\n\t\t\t\tcallback(false);\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Получение списка активных вызовов\n\t * @param callback\n\t */\n\tGetCurrentCalls(callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.pbxGetActiveChannels,\n\t\t\ton: 'now',\n\t\t\tsuccessTest(response) {\n\t\t\t\t// test whether a JSON response is valid\n\t\t\t\treturn response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0;\n\t\t\t},\n\t\t\tonSuccess(response) {\n\t\t\t\tif (Object.keys(response).length > 0) {\n\t\t\t\t\tcallback(response);\n\t\t\t\t} else {\n\t\t\t\t\tcallback(false);\n\t\t\t\t}\n\t\t\t},\n\t\t\tonError(errorMessage, element, xhr) {\n\t\t\t\tif (xhr.status === 403) {\n\t\t\t\t\twindow.location = `${globalRootUrl}session/index`;\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Перезагрузка станции\n\t */\n\tSystemReboot() {\n\t\t$.api({\n\t\t\turl: PbxApi.systemReboot,\n\t\t\ton: 'now',\n\t\t});\n\t},\n\t/**\n\t * Выключение станции\n\t */\n\tSystemShutDown() {\n\t\t$.api({\n\t\t\turl: PbxApi.systemShutDown,\n\t\t\ton: 'now',\n\t\t});\n\t},\n\n\t/**\n\t * Проверка доступности необходимых фич в лицензионном ключе\n\t * @param callback\n\t */\n\tCheckLicense(callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.pbxCheckLicense,\n\t\t\ton: 'now',\n\t\t\tonSuccess(response) {\n\t\t\t\tif (response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0) {\n\t\t\t\t\tif (response.result.toUpperCase() === 'ERROR') {\n\t\t\t\t\t\tcallback(response.error);\n\t\t\t\t\t} else if (response.result.toUpperCase() === 'SUCCESS') {\n\t\t\t\t\t\tcallback(true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Запуск сборщика системных логов\n\t */\n\tSystemStartLogsCapture() {\n\t\tlocalStorage.setItem('LogsCaptureStatus', 'started');\n\t\tsetTimeout(() => {\n\t\t\tlocalStorage.setItem('LogsCaptureStatus', 'stopped');\n\t\t}, 5000);\n\t\t$.api({\n\t\t\turl: PbxApi.systemStartLogsCapture,\n\t\t\ton: 'now',\n\t\t});\n\t},\n\t/**\n\t * Остановка сборщика системных логов\n\t */\n\tSystemStopLogsCapture() {\n\t\tlocalStorage.setItem('LogsCaptureStatus', 'stopped');\n\t\twindow.location = PbxApi.systemStopLogsCapture;\n\t},\n\t/**\n\t * Получить список архивов\n\t */\n\tBackupGetFilesList(callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.backupGetFilesList,\n\t\t\ton: 'now',\n\t\t\tsuccessTest(response) {\n\t\t\t\t// test whether a JSON response is valid\n\t\t\t\treturn response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS';\n\t\t\t},\n\t\t\tonSuccess(response) {\n\t\t\t\tcallback(response.data);\n\t\t\t},\n\t\t\tonError() {\n\t\t\t\tcallback(false);\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Скачать файл архива по указанному ID\n\t */\n\tBackupDownloadFile(fileId) {\n\t\twindow.location = `${PbxApi.backupDownloadFile}?id=${fileId}`;\n\t},\n\t/**\n\t * Удалить файл по указанному ID\n\t * @param fileId - идентификатор файла с архивом\n\t * @param callback - функция для обработки результата\n\t */\n\tBackupDeleteFile(fileId, callback) {\n\t\t$.api({\n\t\t\turl: `${PbxApi.backupDeleteFile}?id={id}`,\n\t\t\ton: 'now',\n\t\t\turlData: {\n\t\t\t\tid: fileId,\n\t\t\t},\n\t\t\tsuccessTest(response) {\n\t\t\t\t// test whether a JSON response is valid\n\t\t\t\treturn response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS';\n\t\t\t},\n\t\t\tonSuccess() {\n\t\t\t\tcallback(true);\n\t\t\t},\n\t\t\tonError() {\n\t\t\t\tcallback(false);\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Восстановить систему по указанному ID бекапа\n\t * @param jsonParams - {\"id\": \"backup_1534838222\", \"options\":{\"backup-sound-files\":\"1\"}}'\n\t * @param callback - функция для обработки результата\n\t */\n\tBackupRecover(jsonParams, callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.backupRecover,\n\t\t\tmethod: 'POST',\n\t\t\tdata: JSON.stringify(jsonParams),\n\t\t\ton: 'now',\n\t\t\tsuccessTest(response) {\n\t\t\t\t// test whether a JSON response is valid\n\t\t\t\treturn response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS';\n\t\t\t},\n\t\t\tonSuccess() {\n\t\t\t\tcallback(true);\n\t\t\t},\n\t\t\tonError() {\n\t\t\t\tcallback(false);\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Начало архивирование системы\n\t * @param jsonParams -\n\t * {\n\t * \t\"backup-config\":\"1\",\n\t * \t\"backup-records\":\"1\",\n\t * \t\"backup-cdr\":\"1\",\n\t * \t\"backup-sound-files\":\"1\"\n\t * \t}\n\t * @param callback - функция для обработки результата\n\t */\n\tBackupStart(jsonParams, callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.backupStart,\n\t\t\ton: 'now',\n\t\t\tmethod: 'POST',\n\t\t\tdata: JSON.stringify(jsonParams),\n\t\t\tsuccessTest(response) {\n\t\t\t\t// test whether a JSON response is valid\n\t\t\t\treturn Object.keys(response).length > 0 && response.result.toUpperCase() === 'SUCCESS';\n\t\t\t},\n\t\t\tonSuccess(response) {\n\t\t\t\tcallback(response.data);\n\t\t\t},\n\t\t\tonError() {\n\t\t\t\tcallback(false);\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Приостановить архивирование системы\n\t * @param fileId - ИД с файлом архива\n\t * @param callback - функция для обработки результата\n\t */\n\tBackupStop(fileId, callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.backupStop,\n\t\t\ton: 'now',\n\t\t\tmethod: 'POST',\n\t\t\tdata: `{'id':'${fileId}'}`,\n\t\t\tsuccessTest(response) {\n\t\t\t\t// test whether a JSON response is valid\n\t\t\t\treturn response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS';\n\t\t\t},\n\t\t\tonSuccess(response) {\n\t\t\t\tcallback(response.data);\n\t\t\t},\n\t\t\tonError() {\n\t\t\t\tcallback(false);\n\t\t\t},\n\t\t});\n\t},\n\n\t/**\n\t * Получить размер файлов для бекапа\n\t * @param callback - функция для обработки результата\n\t */\n\tBackupGetEstimatedSize(callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.backupGetEstimatedSize,\n\t\t\ton: 'now',\n\t\t\tsuccessTest(response) {\n\t\t\t\t// test whether a JSON response is valid\n\t\t\t\treturn response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS';\n\t\t\t},\n\t\t\tonSuccess(response) {\n\t\t\t\tcallback(response.data);\n\t\t\t},\n\t\t\tonError() {\n\t\t\t\tcallback(false);\n\t\t\t},\n\t\t});\n\t},\n\n\t/**\n\t * Загрузить на станцию файл бекапа\n\t * @param file - Тело загружаемого файла\n\t * @param callback - функция для обработки результата\n\t */\n\tBackupUpload(file, callback) {\n\t\t$.api({\n\t\t\ton: 'now',\n\t\t\turl: PbxApi.backupUpload,\n\t\t\tmethod: 'POST',\n\t\t\tcache: false,\n\t\t\tprocessData: false,\n\t\t\tcontentType: false,\n\t\t\tbeforeSend: (settings) => {\n\t\t\t\tconst newSettings = settings;\n\t\t\t\tconst now = parseInt(Date.now() / 1000, 10);\n\t\t\t\tnewSettings.data = new FormData();\n\t\t\t\tnewSettings.data.append(`backup_${now}`, file);\n\t\t\t\treturn newSettings;\n\t\t\t},\n\t\t\tonResponse: response => response,\n\t\t\tsuccessTest: response => !response.error || false, // change this\n\t\t\tonSuccess: (json) => {\n\t\t\t\tcallback(json);\n\t\t\t},\n\t\t\tonFailure: (json) => {\n\t\t\t\tcallback(json);\n\t\t\t},\n\t\t\txhr: () => {\n\t\t\t\tconst xhr = new window.XMLHttpRequest();\n\t\t\t\t// прогресс загрузки на сервер\n\t\t\t\txhr.upload.addEventListener('progress', (evt) => {\n\t\t\t\t\tif (evt.lengthComputable) {\n\t\t\t\t\t\tconst percentComplete = 100 * (evt.loaded / evt.total);\n\t\t\t\t\t\tconst json = {\n\t\t\t\t\t\t\tfunction: 'upload_progress',\n\t\t\t\t\t\t\tpercent: percentComplete,\n\t\t\t\t\t\t};\n\t\t\t\t\t\t// делать что-то...\n\t\t\t\t\t\tcallback(json);\n\t\t\t\t\t}\n\t\t\t\t}, false);\n\t\t\t\treturn xhr;\n\t\t\t},\n\t\t});\n\t},\n\n\t/**\n\t * Удалить файл по указанному ID\n\t * @param fileId - идентификатор файла с архивом\n\t * @param callback - функция для обработки результата\n\t */\n\tBackupStatusUpload(fileId, callback) {\n\t\t$.api({\n\t\t\turl: `${PbxApi.backupStatusUpload}?backup_id={id}`,\n\t\t\ton: 'now',\n\t\t\turlData: {\n\t\t\t\tid: fileId,\n\t\t\t},\n\t\t\tsuccessTest(response) {\n\t\t\t\t// test whether a JSON response is valid\n\t\t\t\treturn response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0;\n\t\t\t},\n\t\t\tonSuccess(response) {\n\t\t\t\tcallback(response);\n\t\t\t},\n\t\t\tonError() {\n\t\t\t\tcallback(false);\n\t\t\t},\n\t\t});\n\t},\n\n\t/**\n\t * Запускает запланированное резервное копирование сразу\n\t *\n\t */\n\tBackupStartScheduled(callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.backupStartScheduled,\n\t\t\ton: 'now',\n\t\t\tsuccessTest(response) {\n\t\t\t\t// test whether a JSON response is valid\n\t\t\t\treturn response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS';\n\t\t\t},\n\t\t\tonSuccess() {\n\t\t\t\tcallback(true);\n\t\t\t},\n\t\t\tonError() {\n\t\t\t\tcallback(false);\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Загрузить на станцию файл обновления\n\t * @param file - Тело загружаемого файла\n\t * @param callback - функция для обработки результата\n\t */\n\tSystemUpgrade(file, callback) {\n\t\t$.api({\n\t\t\ton: 'now',\n\t\t\turl: PbxApi.systemUpgrade,\n\t\t\tmethod: 'POST',\n\t\t\tcache: false,\n\t\t\tprocessData: false,\n\t\t\tcontentType: false,\n\t\t\tbeforeSend: (settings) => {\n\t\t\t\tconst newSettings = settings;\n\t\t\t\tconst now = parseInt(Date.now() / 1000, 10);\n\t\t\t\tnewSettings.data = new FormData();\n\t\t\t\tnewSettings.data.append(`upgrade_${now}`, file);\n\t\t\t\treturn newSettings;\n\t\t\t},\n\t\t\tonResponse: response => response,\n\t\t\tsuccessTest: response => !response.error || false, // change this\n\t\t\tonSuccess: (json) => {\n\t\t\t\tcallback(json);\n\t\t\t},\n\t\t\tonFailure: (json) => {\n\t\t\t\tcallback(json);\n\t\t\t},\n\t\t\txhr: () => {\n\t\t\t\tconst xhr = new window.XMLHttpRequest();\n\t\t\t\t// прогресс загрузки на сервер\n\t\t\t\txhr.upload.addEventListener('progress', (evt) => {\n\t\t\t\t\tif (evt.lengthComputable) {\n\t\t\t\t\t\tconst percentComplete = 100 * (evt.loaded / evt.total);\n\t\t\t\t\t\tconst json = {\n\t\t\t\t\t\t\tfunction: 'upload_progress',\n\t\t\t\t\t\t\tpercent: percentComplete,\n\t\t\t\t\t\t};\n\t\t\t\t\t\t// делать что-то...\n\t\t\t\t\t\tcallback(json);\n\t\t\t\t\t}\n\t\t\t\t}, false);\n\t\t\t\treturn xhr;\n\t\t\t},\n\t\t});\n\t},\n\n\t/**\n\t * Загрузить на станцию файл записи\n\t * @param file - Тело загружаемого файла\n\t * @param callback - функция для обработки результата\n\t */\n\tSystemUploadAudioFile(file, callback) {\n\t\t$.api({\n\t\t\ton: 'now',\n\t\t\turl: PbxApi.systemUploadAudioFile,\n\t\t\tmethod: 'POST',\n\t\t\tcache: false,\n\t\t\tprocessData: false,\n\t\t\tcontentType: false,\n\t\t\tbeforeSend: (settings) => {\n\t\t\t\tconst extension = file.name.slice((file.name.lastIndexOf('.') - 1 >>> 0) + 2);\n\t\t\t\tconst newFileName = `${parseInt(Date.now() / 1000, 10)}.${extension}`;\n\t\t\t\tconst newSettings = settings;\n\t\t\t\t// const newFile = new File([file], newFileName);\n\t\t\t\tconst blob = new Blob([file]);\n\t\t\t\tblob.lastModifiedDate = new Date();\n\t\t\t\tnewSettings.data = new FormData();\n\t\t\t\t// newSettings.data.append(newFileName, newFile);\n\t\t\t\tnewSettings.data.append('file', blob, newFileName);\n\t\t\t\treturn newSettings;\n\t\t\t},\n\t\t\tsuccessTest(response) {\n\t\t\t\t// test whether a JSON response is valid\n\t\t\t\treturn response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS';\n\t\t\t},\n\t\t\tonSuccess(response) {\n\t\t\t\tcallback(response.filename);\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Получить список архивов\n\t */\n\tSystemRemoveAudioFile(filePath) {\n\t\t$.api({\n\t\t\turl: PbxApi.systemRemoveAudioFile,\n\t\t\ton: 'now',\n\t\t\tmethod: 'POST',\n\t\t\tdata: `{'filename':'${filePath}'}`,\n\t\t});\n\t},\n\n\t/**\n\t * Перезапуск модулей расширений\n\t */\n\tSystemReloadModule(moduleName) {\n\t\t$.api({\n\t\t\turl: `${Config.pbxUrl}/pbxcore/api/modules/${moduleName}/reload`,\n\t\t\ton: 'now',\n\t\t});\n\t},\n\t/**\n\t * Установка модуля расширения\n\t *\n\t */\n\tSystemInstallModule(params) {\n\t\t$.api({\n\t\t\turl: PbxApi.systemInstallModule,\n\t\t\ton: 'now',\n\t\t\tmethod: 'POST',\n\t\t\tdata: `{\"uniqid\":\"${params.uniqid}\",\"md5\":\"${params.md5}\",\"size\":\"${params.size}\",\"url\":\"${params.updateLink}\"}`,\n\t\t});\n\t},\n\t/**\n\t * Удаление модуля расширения\n\t *\n\t * @param moduleName - id модуля\n\t * @param keepSettings bool - сохранять ли настройки\n\t * @param callback - функция колбека\n\t */\n\tSystemDeleteModule(moduleName, keepSettings, callback) {\n\t\t$.api({\n\t\t\turl: `${Config.pbxUrl}/pbxcore/api/modules/${moduleName}/uninstall`,\n\t\t\ton: 'now',\n\t\t\tmethod: 'POST',\n\t\t\tdata: `{\"uniqid\":\"${moduleName}\",\"keepSettings\":\"${keepSettings}\"}`,\n\t\t\tsuccessTest(response) {\n\t\t\t\t// test whether a JSON response is valid\n\t\t\t\treturn response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS';\n\t\t\t},\n\t\t\tonSuccess() {\n\t\t\t\tcallback(true);\n\t\t\t},\n\t\t\tonError(response) {\n\t\t\t\tcallback(response);\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Установка обновления PBX\n\t *\n\t */\n\tSystemUpgradeOnline(params) {\n\t\t$.api({\n\t\t\turl: PbxApi.systemUpgradeOnline,\n\t\t\ton: 'now',\n\t\t\tmethod: 'POST',\n\t\t\tdata: `{\"md5\":\"${params.md5}\",\"url\":\"${params.updateLink}\"}`,\n\t\t});\n\t},\n\n\t/**\n\t * Получение статуса обновления станции\n\t */\n\tSystemGetUpgradeStatus(callback) {\n\t\t$.api({\n\t\t\turl: PbxApi.systemGetUpgradeStatus,\n\t\t\ton: 'now',\n\t\t\tsuccessTest(response) {\n\t\t\t\t// test whether a JSON response is valid\n\t\t\t\treturn response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS';\n\t\t\t},\n\t\t\tonSuccess(response) {\n\t\t\t\tcallback(response);\n\t\t\t},\n\t\t\tonError() {\n\t\t\t\tcallback(false);\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Проверка статуса установки модуля\n\t * @param moduleName - uniqid модуля\n\t * @param callback - функция для обработки результата\n\t */\n\tSystemGetModuleInstallStatus(moduleName, callback) {\n\t\t$.api({\n\t\t\turl: `${Config.pbxUrl}/pbxcore/api/modules/${moduleName}/status`,\n\t\t\ton: 'now',\n\t\t\tsuccessTest(response) {\n\t\t\t\t// test whether a JSON response is valid\n\t\t\t\treturn response !== undefined\n\t\t\t\t\t&& Object.keys(response).length > 0\n\t\t\t\t\t&& response.result.toUpperCase() === 'SUCCESS';\n\t\t\t},\n\t\t\tonSuccess(response) {\n\t\t\t\tcallback(response);\n\t\t\t},\n\t\t\tonError() {\n\t\t\t\tcallback(false);\n\t\t\t},\n\t\t});\n\t},\n\n};\n\n// export default PbxApi;\n"],"file":"pbxapi.js"}