"use strict";

/*
 * Copyright (C) MIKO LLC - All Rights Reserved
 * Unauthorized copying of this file, via any medium is strictly prohibited
 * Proprietary and confidential
 * Written by Nikolay Beketov, 12 2019
 *
 */

/* global Sentry, globalPBXVersion, globalPBXLicense, globalLastSentryEventId, globalTranslate */
Sentry.onLoad(function () {
  function globalShowSentryReportDialog(hash, sentryEventId) {
    var itIsKnownError = localStorage.getItem("sentry_lastError".concat(hash));

    if (itIsKnownError === null) {
      if (globalTranslate !== undefined && Object.keys(globalTranslate).length > 0) {
        Sentry.showReportDialog({
          eventId: sentryEventId,
          title: globalTranslate.sntry_Title,
          subtitle: globalTranslate.sntry_Subtitle,
          subtitle2: globalTranslate.sntry_Subtitle2,
          labelComments: globalTranslate.sntry_LabelComments,
          labelClose: globalTranslate.sntry_LabelClose,
          labelSubmit: globalTranslate.sntry_LabelSubmit,
          errorGeneric: globalTranslate.sntry_ErrorGeneric,
          errorFormEntry: globalTranslate.sntry_ErrorFormEntry,
          successMessage: globalTranslate.sntry_SuccessMessage
        });
      } else {
        Sentry.showReportDialog({
          eventId: sentryEventId
        });
      }

      localStorage.setItem("sentry_lastError".concat(hash), 'theFormHasAlreadySent');
    }
  }

  Sentry.init({
    dsn: 'https://a8d729459beb446eb3cbb9df997dcc7b@centry.miko.ru/1',
    release: "mikopbx@".concat(globalPBXVersion),
    beforeSend: function () {
      function beforeSend(event, hint) {
        // Check if it is an exception, and if so, show the report dialog
        if (event.exception) {
          var error = hint.originalException;

          if (error && error.message && error.message.length > 0) {
            var s = error.message;
            var hash = 0;
            var i;
            var chr;

            for (i = 0; i < s.length; i++) {
              chr = s.charCodeAt(i);
              hash = (hash << 5) - hash + chr;
              hash |= 0; // Convert to 32bit integer
            }

            globalShowSentryReportDialog(hash, hint.eventId);
          }
        }

        return event;
      }

      return beforeSend;
    }()
  });
  Sentry.configureScope(function (scope) {
    scope.setUser({
      id: globalPBXLicense
    });
    scope.setTag('library', 'web-interface');
  });

  if (globalLastSentryEventId) {
    globalShowSentryReportDialog(globalLastSentryEventId);
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tYWluL3NlbnRyeS1lcnJvci1sb2dnZXIuanMiXSwibmFtZXMiOlsiU2VudHJ5Iiwib25Mb2FkIiwiZ2xvYmFsU2hvd1NlbnRyeVJlcG9ydERpYWxvZyIsImhhc2giLCJzZW50cnlFdmVudElkIiwiaXRJc0tub3duRXJyb3IiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwiZ2xvYmFsVHJhbnNsYXRlIiwidW5kZWZpbmVkIiwiT2JqZWN0Iiwia2V5cyIsImxlbmd0aCIsInNob3dSZXBvcnREaWFsb2ciLCJldmVudElkIiwidGl0bGUiLCJzbnRyeV9UaXRsZSIsInN1YnRpdGxlIiwic250cnlfU3VidGl0bGUiLCJzdWJ0aXRsZTIiLCJzbnRyeV9TdWJ0aXRsZTIiLCJsYWJlbENvbW1lbnRzIiwic250cnlfTGFiZWxDb21tZW50cyIsImxhYmVsQ2xvc2UiLCJzbnRyeV9MYWJlbENsb3NlIiwibGFiZWxTdWJtaXQiLCJzbnRyeV9MYWJlbFN1Ym1pdCIsImVycm9yR2VuZXJpYyIsInNudHJ5X0Vycm9yR2VuZXJpYyIsImVycm9yRm9ybUVudHJ5Iiwic250cnlfRXJyb3JGb3JtRW50cnkiLCJzdWNjZXNzTWVzc2FnZSIsInNudHJ5X1N1Y2Nlc3NNZXNzYWdlIiwic2V0SXRlbSIsImluaXQiLCJkc24iLCJyZWxlYXNlIiwiZ2xvYmFsUEJYVmVyc2lvbiIsImJlZm9yZVNlbmQiLCJldmVudCIsImhpbnQiLCJleGNlcHRpb24iLCJlcnJvciIsIm9yaWdpbmFsRXhjZXB0aW9uIiwibWVzc2FnZSIsInMiLCJpIiwiY2hyIiwiY2hhckNvZGVBdCIsImNvbmZpZ3VyZVNjb3BlIiwic2NvcGUiLCJzZXRVc2VyIiwiaWQiLCJnbG9iYWxQQlhMaWNlbnNlIiwic2V0VGFnIiwiZ2xvYmFsTGFzdFNlbnRyeUV2ZW50SWQiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7Ozs7O0FBT0E7QUFFQUEsTUFBTSxDQUFDQyxNQUFQLENBQWMsWUFBTTtBQUNuQixXQUFTQyw0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LEdBSEQ7O0FBS0EsTUFBSUMsdUJBQUosRUFBNkI7QUFDNUJyRCxJQUFBQSw0QkFBNEIsQ0FBQ3FELHVCQUFELENBQTVCO0FBQ0E7QUFDRCxDQTFERCIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgKEMpIE1JS08gTExDIC0gQWxsIFJpZ2h0cyBSZXNlcnZlZFxuICogVW5hdXRob3JpemVkIGNvcHlpbmcgb2YgdGhpcyBmaWxlLCB2aWEgYW55IG1lZGl1bSBpcyBzdHJpY3RseSBwcm9oaWJpdGVkXG4gKiBQcm9wcmlldGFyeSBhbmQgY29uZmlkZW50aWFsXG4gKiBXcml0dGVuIGJ5IE5pa29sYXkgQmVrZXRvdiwgMTIgMjAxOVxuICpcbiAqL1xuLyogZ2xvYmFsIFNlbnRyeSwgZ2xvYmFsUEJYVmVyc2lvbiwgZ2xvYmFsUEJYTGljZW5zZSwgZ2xvYmFsTGFzdFNlbnRyeUV2ZW50SWQsIGdsb2JhbFRyYW5zbGF0ZSAqL1xuXG5TZW50cnkub25Mb2FkKCgpID0+IHtcblx0ZnVuY3Rpb24gZ2xvYmFsU2hvd1NlbnRyeVJlcG9ydERpYWxvZyhoYXNoLCBzZW50cnlFdmVudElkKSB7XG5cdFx0Y29uc3QgaXRJc0tub3duRXJyb3IgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShgc2VudHJ5X2xhc3RFcnJvciR7aGFzaH1gKTtcblx0XHRpZiAoaXRJc0tub3duRXJyb3IgPT09IG51bGwpIHtcblx0XHRcdGlmIChnbG9iYWxUcmFuc2xhdGUgIT09IHVuZGVmaW5lZCAmJiBPYmplY3Qua2V5cyhnbG9iYWxUcmFuc2xhdGUpLmxlbmd0aCA+IDApIHtcblx0XHRcdFx0U2VudHJ5LnNob3dSZXBvcnREaWFsb2coe1xuXHRcdFx0XHRcdGV2ZW50SWQ6IHNlbnRyeUV2ZW50SWQsXG5cdFx0XHRcdFx0dGl0bGU6IGdsb2JhbFRyYW5zbGF0ZS5zbnRyeV9UaXRsZSxcblx0XHRcdFx0XHRzdWJ0aXRsZTogZ2xvYmFsVHJhbnNsYXRlLnNudHJ5X1N1YnRpdGxlLFxuXHRcdFx0XHRcdHN1YnRpdGxlMjogZ2xvYmFsVHJhbnNsYXRlLnNudHJ5X1N1YnRpdGxlMixcblx0XHRcdFx0XHRsYWJlbENvbW1lbnRzOiBnbG9iYWxUcmFuc2xhdGUuc250cnlfTGFiZWxDb21tZW50cyxcblx0XHRcdFx0XHRsYWJlbENsb3NlOiBnbG9iYWxUcmFuc2xhdGUuc250cnlfTGFiZWxDbG9zZSxcblx0XHRcdFx0XHRsYWJlbFN1Ym1pdDogZ2xvYmFsVHJhbnNsYXRlLnNudHJ5X0xhYmVsU3VibWl0LFxuXHRcdFx0XHRcdGVycm9yR2VuZXJpYzogZ2xvYmFsVHJhbnNsYXRlLnNudHJ5X0Vycm9yR2VuZXJpYyxcblx0XHRcdFx0XHRlcnJvckZvcm1FbnRyeTogZ2xvYmFsVHJhbnNsYXRlLnNudHJ5X0Vycm9yRm9ybUVudHJ5LFxuXHRcdFx0XHRcdHN1Y2Nlc3NNZXNzYWdlOiBnbG9iYWxUcmFuc2xhdGUuc250cnlfU3VjY2Vzc01lc3NhZ2UsXG5cblx0XHRcdFx0fSk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRTZW50cnkuc2hvd1JlcG9ydERpYWxvZyh7IGV2ZW50SWQ6IHNlbnRyeUV2ZW50SWQgfSk7XG5cdFx0XHR9XG5cdFx0XHRsb2NhbFN0b3JhZ2Uuc2V0SXRlbShgc2VudHJ5X2xhc3RFcnJvciR7aGFzaH1gLCAndGhlRm9ybUhhc0FscmVhZHlTZW50Jyk7XG5cdFx0fVxuXHR9XG5cblx0U2VudHJ5LmluaXQoe1xuXHRcdGRzbjogJ2h0dHBzOi8vYThkNzI5NDU5YmViNDQ2ZWIzY2JiOWRmOTk3ZGNjN2JAY2VudHJ5Lm1pa28ucnUvMScsXG5cdFx0cmVsZWFzZTogYG1pa29wYnhAJHtnbG9iYWxQQlhWZXJzaW9ufWAsXG5cdFx0YmVmb3JlU2VuZChldmVudCwgaGludCkge1xuXHRcdFx0Ly8gQ2hlY2sgaWYgaXQgaXMgYW4gZXhjZXB0aW9uLCBhbmQgaWYgc28sIHNob3cgdGhlIHJlcG9ydCBkaWFsb2dcblx0XHRcdGlmIChldmVudC5leGNlcHRpb24pIHtcblx0XHRcdFx0Y29uc3QgZXJyb3IgPSBoaW50Lm9yaWdpbmFsRXhjZXB0aW9uO1xuXHRcdFx0XHRpZiAoZXJyb3IgJiYgZXJyb3IubWVzc2FnZSAmJiBlcnJvci5tZXNzYWdlLmxlbmd0aCA+IDApIHtcblx0XHRcdFx0XHRjb25zdCBzID0gZXJyb3IubWVzc2FnZTtcblx0XHRcdFx0XHRsZXQgaGFzaCA9IDA7XG5cdFx0XHRcdFx0bGV0IGk7XG5cdFx0XHRcdFx0bGV0IGNocjtcblx0XHRcdFx0XHRmb3IgKGkgPSAwOyBpIDwgcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRcdFx0Y2hyID0gcy5jaGFyQ29kZUF0KGkpO1xuXHRcdFx0XHRcdFx0aGFzaCA9ICgoaGFzaCA8PCA1KSAtIGhhc2gpICsgY2hyO1xuXHRcdFx0XHRcdFx0aGFzaCB8PSAwOyAvLyBDb252ZXJ0IHRvIDMyYml0IGludGVnZXJcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0Z2xvYmFsU2hvd1NlbnRyeVJlcG9ydERpYWxvZyhoYXNoLCBoaW50LmV2ZW50SWQpO1xuXHRcdFx0XHR9XG5cblx0XHRcdH1cblx0XHRcdHJldHVybiBldmVudDtcblx0XHR9LFxuXHR9KTtcblxuXHRTZW50cnkuY29uZmlndXJlU2NvcGUoKHNjb3BlKSA9PiB7XG5cdFx0c2NvcGUuc2V0VXNlcih7IGlkOiBnbG9iYWxQQlhMaWNlbnNlIH0pO1xuXHRcdHNjb3BlLnNldFRhZygnbGlicmFyeScsICd3ZWItaW50ZXJmYWNlJyk7XG5cdH0pO1xuXG5cdGlmIChnbG9iYWxMYXN0U2VudHJ5RXZlbnRJZCkge1xuXHRcdGdsb2JhbFNob3dTZW50cnlSZXBvcnREaWFsb2coZ2xvYmFsTGFzdFNlbnRyeUV2ZW50SWQpO1xuXHR9XG59KTtcblxuIl19