"use strict";

/*
 * Copyright (C) MIKO LLC - All Rights Reserved
 * Unauthorized copying of this file, via any medium is strictly prohibited
 * Proprietary and confidential
 * Written by Nikolay Beketov, 12 2019
 *
 */

/* global Sentry, globalPBXVersion, globalPBXLicense,
globalLastSentryEventId, globalTranslate, localStorage */
Sentry.onLoad(function () {
  function globalShowSentryReportDialog(hash, sentryEventId) {
    var itIsKnownError = localStorage.getItem("sentry_lastError".concat(hash));

    if (itIsKnownError === null) {
      if (globalTranslate !== undefined && Object.keys(globalTranslate).length > 0) {
        Sentry.showReportDialog({
          eventId: sentryEventId,
          title: globalTranslate.sntry_Title,
          subtitle: globalTranslate.sntry_Subtitle,
          subtitle2: globalTranslate.sntry_Subtitle2,
          labelComments: globalTranslate.sntry_LabelComments,
          labelClose: globalTranslate.sntry_LabelClose,
          labelSubmit: globalTranslate.sntry_LabelSubmit,
          errorGeneric: globalTranslate.sntry_ErrorGeneric,
          errorFormEntry: globalTranslate.sntry_ErrorFormEntry,
          successMessage: globalTranslate.sntry_SuccessMessage
        });
      } else {
        Sentry.showReportDialog({
          eventId: sentryEventId
        });
      }

      localStorage.setItem("sentry_lastError".concat(hash), 'theFormHasAlreadySent');
    }
  }

  Sentry.init({
    dsn: 'https://a8d729459beb446eb3cbb9df997dcc7b@centry.miko.ru/1',
    release: "mikopbx@".concat(globalPBXVersion),
    beforeSend: function () {
      function beforeSend(event, hint) {
        // Check if it is an exception, and if so, show the report dialog
        if (event.exception) {
          var error = hint.originalException;

          if (error && error.message && error.message.length > 0) {
            var s = error.message;
            var hash = 0;
            var i;
            var chr;

            for (i = 0; i < s.length; i++) {
              chr = s.charCodeAt(i);
              hash = (hash << 5) - hash + chr;
              hash |= 0; // Convert to 32bit integer
            }

            globalShowSentryReportDialog(hash, hint.eventId);
          }
        }

        return event;
      }

      return beforeSend;
    }()
  });
  Sentry.configureScope(function (scope) {
    scope.setUser({
      id: globalPBXLicense
    });
    scope.setTag('library', 'web-interface');
  });

  if (globalLastSentryEventId) {
    globalShowSentryReportDialog(globalLastSentryEventId);
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tYWluL3NlbnRyeS1lcnJvci1sb2dnZXIuanMiXSwibmFtZXMiOlsiU2VudHJ5Iiwib25Mb2FkIiwiZ2xvYmFsU2hvd1NlbnRyeVJlcG9ydERpYWxvZyIsImhhc2giLCJzZW50cnlFdmVudElkIiwiaXRJc0tub3duRXJyb3IiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwiZ2xvYmFsVHJhbnNsYXRlIiwidW5kZWZpbmVkIiwiT2JqZWN0Iiwia2V5cyIsImxlbmd0aCIsInNob3dSZXBvcnREaWFsb2ciLCJldmVudElkIiwidGl0bGUiLCJzbnRyeV9UaXRsZSIsInN1YnRpdGxlIiwic250cnlfU3VidGl0bGUiLCJzdWJ0aXRsZTIiLCJzbnRyeV9TdWJ0aXRsZTIiLCJsYWJlbENvbW1lbnRzIiwic250cnlfTGFiZWxDb21tZW50cyIsImxhYmVsQ2xvc2UiLCJzbnRyeV9MYWJlbENsb3NlIiwibGFiZWxTdWJtaXQiLCJzbnRyeV9MYWJlbFN1Ym1pdCIsImVycm9yR2VuZXJpYyIsInNudHJ5X0Vycm9yR2VuZXJpYyIsImVycm9yRm9ybUVudHJ5Iiwic250cnlfRXJyb3JGb3JtRW50cnkiLCJzdWNjZXNzTWVzc2FnZSIsInNudHJ5X1N1Y2Nlc3NNZXNzYWdlIiwic2V0SXRlbSIsImluaXQiLCJkc24iLCJyZWxlYXNlIiwiZ2xvYmFsUEJYVmVyc2lvbiIsImJlZm9yZVNlbmQiLCJldmVudCIsImhpbnQiLCJleGNlcHRpb24iLCJlcnJvciIsIm9yaWdpbmFsRXhjZXB0aW9uIiwibWVzc2FnZSIsInMiLCJpIiwiY2hyIiwiY2hhckNvZGVBdCIsImNvbmZpZ3VyZVNjb3BlIiwic2NvcGUiLCJzZXRVc2VyIiwiaWQiLCJnbG9iYWxQQlhMaWNlbnNlIiwic2V0VGFnIiwiZ2xvYmFsTGFzdFNlbnRyeUV2ZW50SWQiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7Ozs7O0FBU0E7O0FBR0FBLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjLFlBQU07QUFDbkIsV0FBU0Ms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QSxHQUhEOztBQUtBLE1BQUlDLHVCQUFKLEVBQTZCO0FBQzVCckQsSUFBQUEsNEJBQTRCLENBQUNxRCx1QkFBRCxDQUE1QjtBQUNBO0FBQ0QsQ0ExREQiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IChDKSBNSUtPIExMQyAtIEFsbCBSaWdodHMgUmVzZXJ2ZWRcbiAqIFVuYXV0aG9yaXplZCBjb3B5aW5nIG9mIHRoaXMgZmlsZSwgdmlhIGFueSBtZWRpdW0gaXMgc3RyaWN0bHkgcHJvaGliaXRlZFxuICogUHJvcHJpZXRhcnkgYW5kIGNvbmZpZGVudGlhbFxuICogV3JpdHRlbiBieSBOaWtvbGF5IEJla2V0b3YsIDEyIDIwMTlcbiAqXG4gKi9cblxuXG4vKiBnbG9iYWwgU2VudHJ5LCBnbG9iYWxQQlhWZXJzaW9uLCBnbG9iYWxQQlhMaWNlbnNlLFxuZ2xvYmFsTGFzdFNlbnRyeUV2ZW50SWQsIGdsb2JhbFRyYW5zbGF0ZSwgbG9jYWxTdG9yYWdlICovXG5cblNlbnRyeS5vbkxvYWQoKCkgPT4ge1xuXHRmdW5jdGlvbiBnbG9iYWxTaG93U2VudHJ5UmVwb3J0RGlhbG9nKGhhc2gsIHNlbnRyeUV2ZW50SWQpIHtcblx0XHRjb25zdCBpdElzS25vd25FcnJvciA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKGBzZW50cnlfbGFzdEVycm9yJHtoYXNofWApO1xuXHRcdGlmIChpdElzS25vd25FcnJvciA9PT0gbnVsbCkge1xuXHRcdFx0aWYgKGdsb2JhbFRyYW5zbGF0ZSAhPT0gdW5kZWZpbmVkICYmIE9iamVjdC5rZXlzKGdsb2JhbFRyYW5zbGF0ZSkubGVuZ3RoID4gMCkge1xuXHRcdFx0XHRTZW50cnkuc2hvd1JlcG9ydERpYWxvZyh7XG5cdFx0XHRcdFx0ZXZlbnRJZDogc2VudHJ5RXZlbnRJZCxcblx0XHRcdFx0XHR0aXRsZTogZ2xvYmFsVHJhbnNsYXRlLnNudHJ5X1RpdGxlLFxuXHRcdFx0XHRcdHN1YnRpdGxlOiBnbG9iYWxUcmFuc2xhdGUuc250cnlfU3VidGl0bGUsXG5cdFx0XHRcdFx0c3VidGl0bGUyOiBnbG9iYWxUcmFuc2xhdGUuc250cnlfU3VidGl0bGUyLFxuXHRcdFx0XHRcdGxhYmVsQ29tbWVudHM6IGdsb2JhbFRyYW5zbGF0ZS5zbnRyeV9MYWJlbENvbW1lbnRzLFxuXHRcdFx0XHRcdGxhYmVsQ2xvc2U6IGdsb2JhbFRyYW5zbGF0ZS5zbnRyeV9MYWJlbENsb3NlLFxuXHRcdFx0XHRcdGxhYmVsU3VibWl0OiBnbG9iYWxUcmFuc2xhdGUuc250cnlfTGFiZWxTdWJtaXQsXG5cdFx0XHRcdFx0ZXJyb3JHZW5lcmljOiBnbG9iYWxUcmFuc2xhdGUuc250cnlfRXJyb3JHZW5lcmljLFxuXHRcdFx0XHRcdGVycm9yRm9ybUVudHJ5OiBnbG9iYWxUcmFuc2xhdGUuc250cnlfRXJyb3JGb3JtRW50cnksXG5cdFx0XHRcdFx0c3VjY2Vzc01lc3NhZ2U6IGdsb2JhbFRyYW5zbGF0ZS5zbnRyeV9TdWNjZXNzTWVzc2FnZSxcblxuXHRcdFx0XHR9KTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFNlbnRyeS5zaG93UmVwb3J0RGlhbG9nKHsgZXZlbnRJZDogc2VudHJ5RXZlbnRJZCB9KTtcblx0XHRcdH1cblx0XHRcdGxvY2FsU3RvcmFnZS5zZXRJdGVtKGBzZW50cnlfbGFzdEVycm9yJHtoYXNofWAsICd0aGVGb3JtSGFzQWxyZWFkeVNlbnQnKTtcblx0XHR9XG5cdH1cblxuXHRTZW50cnkuaW5pdCh7XG5cdFx0ZHNuOiAnaHR0cHM6Ly9hOGQ3Mjk0NTliZWI0NDZlYjNjYmI5ZGY5OTdkY2M3YkBjZW50cnkubWlrby5ydS8xJyxcblx0XHRyZWxlYXNlOiBgbWlrb3BieEAke2dsb2JhbFBCWFZlcnNpb259YCxcblx0XHRiZWZvcmVTZW5kKGV2ZW50LCBoaW50KSB7XG5cdFx0XHQvLyBDaGVjayBpZiBpdCBpcyBhbiBleGNlcHRpb24sIGFuZCBpZiBzbywgc2hvdyB0aGUgcmVwb3J0IGRpYWxvZ1xuXHRcdFx0aWYgKGV2ZW50LmV4Y2VwdGlvbikge1xuXHRcdFx0XHRjb25zdCBlcnJvciA9IGhpbnQub3JpZ2luYWxFeGNlcHRpb247XG5cdFx0XHRcdGlmIChlcnJvciAmJiBlcnJvci5tZXNzYWdlICYmIGVycm9yLm1lc3NhZ2UubGVuZ3RoID4gMCkge1xuXHRcdFx0XHRcdGNvbnN0IHMgPSBlcnJvci5tZXNzYWdlO1xuXHRcdFx0XHRcdGxldCBoYXNoID0gMDtcblx0XHRcdFx0XHRsZXQgaTtcblx0XHRcdFx0XHRsZXQgY2hyO1xuXHRcdFx0XHRcdGZvciAoaSA9IDA7IGkgPCBzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdFx0XHRjaHIgPSBzLmNoYXJDb2RlQXQoaSk7XG5cdFx0XHRcdFx0XHRoYXNoID0gKChoYXNoIDw8IDUpIC0gaGFzaCkgKyBjaHI7XG5cdFx0XHRcdFx0XHRoYXNoIHw9IDA7IC8vIENvbnZlcnQgdG8gMzJiaXQgaW50ZWdlclxuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRnbG9iYWxTaG93U2VudHJ5UmVwb3J0RGlhbG9nKGhhc2gsIGhpbnQuZXZlbnRJZCk7XG5cdFx0XHRcdH1cblxuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIGV2ZW50O1xuXHRcdH0sXG5cdH0pO1xuXG5cdFNlbnRyeS5jb25maWd1cmVTY29wZSgoc2NvcGUpID0+IHtcblx0XHRzY29wZS5zZXRVc2VyKHsgaWQ6IGdsb2JhbFBCWExpY2Vuc2UgfSk7XG5cdFx0c2NvcGUuc2V0VGFnKCdsaWJyYXJ5JywgJ3dlYi1pbnRlcmZhY2UnKTtcblx0fSk7XG5cblx0aWYgKGdsb2JhbExhc3RTZW50cnlFdmVudElkKSB7XG5cdFx0Z2xvYmFsU2hvd1NlbnRyeVJlcG9ydERpYWxvZyhnbG9iYWxMYXN0U2VudHJ5RXZlbnRJZCk7XG5cdH1cbn0pO1xuXG4iXX0=