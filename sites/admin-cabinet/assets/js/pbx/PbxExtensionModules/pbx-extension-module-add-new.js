"use strict";

/*
 * Copyright (C) MIKO LLC - All Rights Reserved
 * Unauthorized copying of this file, via any medium is strictly prohibited
 * Proprietary and confidential
 * Written by Nikolay Beketov, 12 2019
 *
 */

/* global UserMessage, globalTranslate, PbxApi, upgradeStatusLoopWorker */
var addNewExtension = {
  $uploadButton: $('#add-new-button'),
  $progressBar: $('#upload-progress-bar'),
  $progressBarLabel: $('#upload-progress-bar').find('.label'),
  uploadInProgress: false,
  initialize: function () {
    function initialize() {
      addNewExtension.$progressBar.hide();
      addNewExtension.$uploadButton.on('click', function (e) {
        e.preventDefault();

        if (addNewExtension.$uploadButton.hasClass('loading') || addNewExtension.uploadInProgress) {
          return;
        }

        $('input:file', $(e.target).parents()).click();
      });
      $('input:file').on('change', function (e) {
        if (e.target.files[0] !== undefined) {
          addNewExtension.$progressBar.show();
          var filename = e.target.files[0].name;
          $('input:text', $(e.target).parent()).val(filename);
          addNewExtension.uploadInProgress = true;
          addNewExtension.$uploadButton.addClass('loading');
          var data = $('input:file')[0].files[0];
          PbxApi.SystemUploadModule(data, addNewExtension.cbAfterUploadFile);
        }
      });
    }

    return initialize;
  }(),
  cbAfterUploadFile: function () {
    function cbAfterUploadFile(response, success) {
      if (response.length === 0 || response === false || success === false) {
        addNewExtension.$uploadButton.removeClass('loading');
        addNewExtension.uploadInProgress = false;
        UserMessage.showError(globalTranslate.ext_UploadError);
      } else if (response["function"] === 'upload_progress' && success) {
        addNewExtension.$progressBar.progress({
          percent: parseInt(response.percent, 10)
        });

        if (response.percent < 100) {
          addNewExtension.$progressBarLabel.text(globalTranslate.ext_UploadInProgress);
        } else {
          addNewExtension.$progressBarLabel.text(globalTranslate.ext_InstallationInProgress);
        }
      } else if (response["function"] === 'uploadNewModule' && success) {
        upgradeStatusLoopWorker.initialize(response.uniqid, false);
      } else {
        UserMessage.showMultiString(response.message);
      }
    }

    return cbAfterUploadFile;
  }()
};
$(document).ready(function () {
  addNewExtension.initialize();
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9QYnhFeHRlbnNpb25Nb2R1bGVzL3BieC1leHRlbnNpb24tbW9kdWxlLWFkZC1uZXcuanMiXSwibmFtZXMiOlsiYWRkTmV3RXh0ZW5zaW9uIiwiJHVwbG9hZEJ1dHRvbiIsIiQiLCIkcHJvZ3Jlc3NCYXIiLCIkcHJvZ3Jlc3NCYXJMYWJlbCIsImZpbmQiLCJ1cGxvYWRJblByb2dyZXNzIiwiaW5pdGlhbGl6ZSIsImhpZGUiLCJvbiIsImUiLCJwcmV2ZW50RGVmYXVsdCIsImhhc0NsYXNzIiwidGFyZ2V0IiwicGFyZW50cyIsImNsaWNrIiwiZmlsZXMiLCJ1bmRlZmluZWQiLCJzaG93IiwiZmlsZW5hbWUiLCJuYW1lIiwicGFyZW50IiwidmFsIiwiYWRkQ2xhc3MiLCJkYXRhIiwiUGJ4QXBpIiwiU3lzdGVtVXBsb2FkTW9kdWxlIiwiY2JBZnRlclVwbG9hZEZpbGUiLCJyZXNwb25zZSIsInN1Y2Nlc3MiLCJsZW5ndGgiLCJyZW1vdmVDbGFzcyIsIlVzZXJNZXNzYWdlIiwic2hvd0Vycm9yIiwiZ2xvYmFsVHJhbnNsYXRlIiwiZXh0X1VwbG9hZEVycm9yIiwicHJvZ3Jlc3MiLCJwZXJjZW50IiwicGFyc2VJbnQiLCJ0ZXh0IiwiZXh0X1VwbG9hZEluUHJvZ3Jlc3MiLCJleHRfSW5zdGFsbGF0aW9uSW5Qcm9ncmVzcyIsInVwZ3JhZGVTdGF0dXNMb29wV29ya2VyIiwidW5pcWlkIiwic2hvd011bHRpU3RyaW5nIiwibWVzc2FnZSIsImRvY3VtZW50IiwicmVhZHkiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7Ozs7O0FBUUE7QUFFQSxJQUFNQSxlQUFlLEdBQUc7QUFDdkJDLEVBQUFBLGFBQWEsRUFBRUMsQ0FBQyxDQUFDLGlCQUFELENBRE87QUFFdkJDLEVBQUFBLFlBQVksRUFBRUQsQ0FBQyxDQUFDLHNCQUFELENBRlE7QUFHdkJFLEVBQUFBLGlCQUFpQixFQUFFRixDQUFDLENBQUMsc0JBQUQsQ0FBRCxDQUEwQkcsSUFBMUIsQ0FBK0IsUUFB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LFFBQVEsWUFBUixLQUFzQixpQkFBdEIsSUFBMkNDLE9BQS9DLEVBQXdEO0FBQzlEYSxRQUFBQSx1QkFBdUIsQ0FBQ25DLFVBQXhCLENBQW1DcUIsUUFBUSxDQUFDZSxNQUE1QyxFQUFvRCxLQUFwRDtBQUNBLE9BRk0sTUFFQTtBQUNOWCxRQUFBQSxXQUFXLENBQUNZLGVBQVosQ0FBNEJoQixRQUFRLENBQUNpQixPQUFyQztBQUNBO0FBQ0Q7O0FBL0NzQjtBQUFBO0FBQUEsQ0FBeEI7QUFrREEzQyxDQUFDLENBQUM0QyxRQUFELENBQUQsQ0FBWUMsS0FBWixDQUFrQixZQUFNO0FBQ3ZCL0MsRUFBQUEsZUFBZSxDQUFDTyxVQUFoQjtBQUNBLENBRkQiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IChDKSBNSUtPIExMQyAtIEFsbCBSaWdodHMgUmVzZXJ2ZWRcbiAqIFVuYXV0aG9yaXplZCBjb3B5aW5nIG9mIHRoaXMgZmlsZSwgdmlhIGFueSBtZWRpdW0gaXMgc3RyaWN0bHkgcHJvaGliaXRlZFxuICogUHJvcHJpZXRhcnkgYW5kIGNvbmZpZGVudGlhbFxuICogV3JpdHRlbiBieSBOaWtvbGF5IEJla2V0b3YsIDEyIDIwMTlcbiAqXG4gKi9cblxuLyogZ2xvYmFsIFVzZXJNZXNzYWdlLCBnbG9iYWxUcmFuc2xhdGUsIFBieEFwaSwgdXBncmFkZVN0YXR1c0xvb3BXb3JrZXIgKi8gXG5cbmNvbnN0IGFkZE5ld0V4dGVuc2lvbiA9IHtcblx0JHVwbG9hZEJ1dHRvbjogJCgnI2FkZC1uZXctYnV0dG9uJyksXG5cdCRwcm9ncmVzc0JhcjogJCgnI3VwbG9hZC1wcm9ncmVzcy1iYXInKSxcblx0JHByb2dyZXNzQmFyTGFiZWw6ICQoJyN1cGxvYWQtcHJvZ3Jlc3MtYmFyJykuZmluZCgnLmxhYmVsJyksXG5cdHVwbG9hZEluUHJvZ3Jlc3M6IGZhbHNlLFxuXHRpbml0aWFsaXplKCkge1xuXHRcdGFkZE5ld0V4dGVuc2lvbi4kcHJvZ3Jlc3NCYXIuaGlkZSgpO1xuXHRcdGFkZE5ld0V4dGVuc2lvbi4kdXBsb2FkQnV0dG9uLm9uKCdjbGljaycsIChlKSA9PiB7XG5cdFx0XHRlLnByZXZlbnREZWZhdWx0KCk7XG5cdFx0XHRpZiAoXG5cdFx0XHRcdGFkZE5ld0V4dGVuc2lvbi4kdXBsb2FkQnV0dG9uLmhhc0NsYXNzKCdsb2FkaW5nJylcblx0XHRcdFx0fHwgYWRkTmV3RXh0ZW5zaW9uLnVwbG9hZEluUHJvZ3Jlc3Ncblx0XHRcdCkgeyByZXR1cm47IH1cblx0XHRcdCQoJ2lucHV0OmZpbGUnLCAkKGUudGFyZ2V0KS5wYXJlbnRzKCkpLmNsaWNrKCk7XG5cdFx0fSk7XG5cblx0XHQkKCdpbnB1dDpmaWxlJykub24oJ2NoYW5nZScsIChlKSA9PiB7XG5cdFx0XHRpZiAoZS50YXJnZXQuZmlsZXNbMF0gIT09IHVuZGVmaW5lZCkge1xuXHRcdFx0XHRhZGROZXdFeHRlbnNpb24uJHByb2dyZXNzQmFyLnNob3coKTtcblx0XHRcdFx0Y29uc3QgZmlsZW5hbWUgPSBlLnRhcmdldC5maWxlc1swXS5uYW1lO1xuXHRcdFx0XHQkKCdpbnB1dDp0ZXh0JywgJChlLnRhcmdldCkucGFyZW50KCkpLnZhbChmaWxlbmFtZSk7XG5cdFx0XHRcdGFkZE5ld0V4dGVuc2lvbi51cGxvYWRJblByb2dyZXNzID0gdHJ1ZTtcblx0XHRcdFx0YWRkTmV3RXh0ZW5zaW9uLiR1cGxvYWRCdXR0b24uYWRkQ2xhc3MoJ2xvYWRpbmcnKTtcblx0XHRcdFx0Y29uc3QgZGF0YSA9ICQoJ2lucHV0OmZpbGUnKVswXS5maWxlc1swXTtcblx0XHRcdFx0UGJ4QXBpLlN5c3RlbVVwbG9hZE1vZHVsZShkYXRhLCBhZGROZXdFeHRlbnNpb24uY2JBZnRlclVwbG9hZEZpbGUpO1xuXHRcdFx0fVxuXHRcdH0pO1xuXHR9LFxuXHRjYkFmdGVyVXBsb2FkRmlsZShyZXNwb25zZSwgc3VjY2Vzcykge1xuXHRcdGlmIChyZXNwb25zZS5sZW5ndGggPT09IDAgfHwgcmVzcG9uc2UgPT09IGZhbHNlIHx8IHN1Y2Nlc3MgPT09IGZhbHNlKSB7XG5cdFx0XHRhZGROZXdFeHRlbnNpb24uJHVwbG9hZEJ1dHRvbi5yZW1vdmVDbGFzcygnbG9hZGluZycpO1xuXHRcdFx0YWRkTmV3RXh0ZW5zaW9uLnVwbG9hZEluUHJvZ3Jlc3MgPSBmYWxzZTtcblx0XHRcdFVzZXJNZXNzYWdlLnNob3dFcnJvcihnbG9iYWxUcmFuc2xhdGUuZXh0X1VwbG9hZEVycm9yKTtcblx0XHR9IGVsc2UgaWYgKHJlc3BvbnNlLmZ1bmN0aW9uID09PSAndXBsb2FkX3Byb2dyZXNzJyAmJiBzdWNjZXNzKSB7XG5cdFx0XHRhZGROZXdFeHRlbnNpb24uJHByb2dyZXNzQmFyLnByb2dyZXNzKHtcblx0XHRcdFx0cGVyY2VudDogcGFyc2VJbnQocmVzcG9uc2UucGVyY2VudCwgMTApLFxuXHRcdFx0fSk7XG5cdFx0XHRpZiAocmVzcG9uc2UucGVyY2VudCA8IDEwMCkge1xuXHRcdFx0XHRhZGROZXdFeHRlbnNpb24uJHByb2dyZXNzQmFyTGFiZWwudGV4dChnbG9iYWxUcmFuc2xhdGUuZXh0X1VwbG9hZEluUHJvZ3Jlc3MpO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0YWRkTmV3RXh0ZW5zaW9uLiRwcm9ncmVzc0JhckxhYmVsLnRleHQoZ2xvYmFsVHJhbnNsYXRlLmV4dF9JbnN0YWxsYXRpb25JblByb2dyZXNzKTtcblx0XHRcdH1cblx0XHR9IGVsc2UgaWYgKHJlc3BvbnNlLmZ1bmN0aW9uID09PSAndXBsb2FkTmV3TW9kdWxlJyAmJiBzdWNjZXNzKSB7XG5cdFx0XHR1cGdyYWRlU3RhdHVzTG9vcFdvcmtlci5pbml0aWFsaXplKHJlc3BvbnNlLnVuaXFpZCwgZmFsc2UpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRVc2VyTWVzc2FnZS5zaG93TXVsdGlTdHJpbmcocmVzcG9uc2UubWVzc2FnZSk7XG5cdFx0fVxuXHR9LFxufTtcblxuJChkb2N1bWVudCkucmVhZHkoKCkgPT4ge1xuXHRhZGROZXdFeHRlbnNpb24uaW5pdGlhbGl6ZSgpO1xufSk7XG4iXX0=